#!/bin/bash

################################################################
# Program: ngseasy_fastqc
# Version 1.0 
# Author: Stephen Newhouse (stephen.j.newhouse@gmail.com)
#################################################################
echo -e "\n################################################################"
echo -e "# Program: ngseasy_fastqc"
echo -e "# Version 1.0"
echo -e "# Author: Stephen Newhouse (stephen.j.newhouse@gmail.com)"
echo -e "#################################################################\n"
#################################################################
#################################################################
# clear stuff up
REFDIR=""
GENOMEINDEX=""
PROJECT_ID=""
SAMPLE_ID=""
FASTQ1=""
FASTQ2=""
PROJECT_DIR=""
DNA_PREP_LIBRARY_ID=""
NGS_PLATFORM=""
NGS_TYPE=""
BAIT=""
CAPTURE=""
GENOMEBUILD=""
FASTQC=""
TRIM=""
BSQR=""
REALN=""
ALIGNER=""
VARCALLER=""
CNV=""
ANNOTATOR=""
CLEANUP=""
NCPU=""
NGSEASYVERSION=""
NGSUSER=""
RUNDATE=""
NGSEASY_STEP=""
########################################################################################################
## test if docker is intsalled and exit if not
command -v docker >/dev/null 2>&1 || { echo "I require Docker...but it's not installed.  Aborting." >&2; exit 1; }

########################################################################################################
## Set version and run date
#
NGSEASYVERSION="1.0"
RUNDATE=`date +"%d%m%y"`

########################################################################################################
## docker run command
#
DOCKER_RUN="docker run -P -w /home/pipeman -e HOME=/home/pipeman -e USER=pipeman --user pipeman"

########################################################################################################
## global logging fuction
#
function logger_ngseasy() {
 message=${1}
 mylogfile=${2}
 echo -e [`date`]":[NGSEASY:${NGSEASYVERSION}]:"${message}":[${USER}]:[`uname -a`]" >> ${mylogfile}.log;
 echo -e [`date`]":[NGSEASY:${NGSEASYVERSION}]:"${message}":[${USER}]:[`uname -a`]"
}

########################################################################################################
## global usage
#
function ngseasy_fastqc_usage() {
    echo "
Program: ngseasy_fastqc
Version 1.0
Author: Stephen Newhouse (stephen.j.newhouse@gmail.com)

usage:   ngseasy_fastqc -c <config_file> -d <project_directory>

options:  -c  STRING	configuration file
          -d  STRING	project directory
          -h  NULL	show this message

ngseasy_fastqc sets up the NGSeasy docker fastqc container compbio/ngseasy-fastq:VERSION and runs fastq on raw fastq files.

This is is optomised for PE data, and calls 2 threads as default to process the 2 PE .fastq file simultaneously.
"
}

########################################################################################################
## check and make ~/ngseasy_logs if needed
#
if [[ ! -e  ${HOME}/ngseasy_logs ]]
then
  mkdir ${HOME}/ngseasy_logs
  global_run_logs="${HOME}/ngseasy_logs"
fi

########################################################################################################
## Check options passed in.
#
if test -z "$2"
then
  logger_ngseasy "[ngseasy_fastqc]:ERROR:No options found"
  ngseasy_fastqc_usage
  exit 1
fi

########################################################################################################
## get options for command line args
  while  getopts "hc:d:" opt
  do

      case ${opt} in
	  h)
	  ngseasy_fastqc_usage #print help
	  exit 0
	  ;;
	  
	  c)
	  config_tsv=${OPTARG}
	  ;;

	  d)
	  project_directory=${OPTARG}
	  ;; 
      esac
  done

########################################################################################################  
## check config file exists.
#
if [[ ! -e "${config_tsv}" ]] 
then
	    logger_ngseasy "[ngseasy_fastqc]:ERROR : [${config_tsv}] does not exist....exiting "
	    ngseasy_fastqc_usage;
	    exit 1;
else
	    logger_ngseasy "[ngseasy_fastqc]:Configuration file found [${config_tsv}] "
	    if [[ ! -e ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}.log ]]
	    then
	    touch ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}.log
	    fi
fi

########################################################################################################
## check project_directory exists.
#
if [[ ! -d "${project_directory}" ]]
  then
    logger_ngseasy "[ngseasy_fastqc]:ERROR : project_directory [${project_directory}] does not exist "
    ngseasy_fastqc_usage;
    exit 1;
else
	    logger_ngseasy "[ngseasy_fastqc]:Top Level Project Directory [${project_directory}] "
fi

########################################################################################################
## check Num feilds in  ${config_tsv}
#
logger_ngseasy "[ngseasy_fastqc]:Reading [${config_tsv}] "
logger_ngseasy "[ngseasy_fastqc]:Checking number of feilds in  [${config_tsv}] "

numcols=`awk '{ print NF }' ${config_tsv} | sort -g | head -1`

if [[  "$numcols" -lt 23 ]] 
then
	    logger_ngseasy "[ngseasy_fastqc]:ERROR: [${config_tsv}] format issue. Check your file! "
	    exit 1;
	else 
	    logger_ngseasy "[ngseasy_fastqc]:Number of expected columns [$numcols] of [${config_tsv}] ok...proceeding... "	    
fi


########################################################################################################
## Read config file 

## check ${config_tsv}. is this a batch file or the orginal config file 
#
logger_ngseasy "[ngseasy_fastqc]:Checking [${config_tsv}] format" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}

hasheader=`sed 1q ${config_tsv} | grep PROJECT_ID | wc -l | awk '{print $1}'`

if [[ "${config_tsv}" == *.batch.* ]]
then
  logger_ngseasy "[ngseasy_fastqc]:[${config_tsv}] is a BACTH file ie a subset of the original config file" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
  RUNFILE="${config_tsv}"
  logger_ngseasy "[ngseasy_fastqc]:Setting RUNFILE to [${RUNFILE}]" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
elif [[ "$hasheader" -eq 1 ]]
then
  logger_ngseasy "[ngseasy_fastqc]:[${config_tsv}] header present. Removing this" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
  logger_ngseasy "[ngseasy_fastqc]:[cmd]:sed 1d \${config_tsv} > ${config_tsv}.tmp" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
  sed 1d ${config_tsv} > ${config_tsv}.tmp
  RUNFILE="${config_tsv}.tmp"
  logger_ngseasy "[ngseasy_fastqc]:Setting RUNFILE to [${RUNFILE}]" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
else
  RUNFILE="${config_tsv}"
  logger_ngseasy "[ngseasy_fastqc]:[${RUNFILE}] is seemingly perfect" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
  logger_ngseasy "[ngseasy_fastqc]:Setting RUNFILE to [${RUNFILE}]" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
fi



#head ${RUNFILE}
## Read config and loop through all lines calling fastqc docker
#
while read -r f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 f15 f16 f17 f18 f19 f20 f21 f22 f23
do
PROJECT_ID=$f1
SAMPLE_ID=$f2
FASTQ1=$f3
FASTQ2=$f4
PROJECT_DIR=$f5
DNA_PREP_LIBRARY_ID=$f6
NGS_PLATFORM=$f7
NGS_TYPE=$f8
BAIT=$f9
CAPTURE=$f10
GENOMEBUILD=$f11
FASTQC=$f12
TRIM=$f13
BSQR=$f14
REALN=$f15
ALIGNER=$f16
VARCALLER=$f17
CNV=$f18
ANNOTATOR=$f19
CLEANUP=$f20
NCPU=$f21
NGSEASYVERSION=$f22
NGSUSER=$f23
DATE=`date +"%d%m%y"`
########################################################################################################
## LOGFILE 
#
LOGFILE="${PROJECT_DIR}/${PROJECT_ID}/run_logs/${SAMPLE_ID}.${TRIM}.${BSQR}.${REALN}.${ALIGNER}.${RUNDATE}.ngseasy_fastqc"
logger_ngseasy "[ngseasy_fastqc]:logging to [${LOGFILE}.log]"  ${LOGFILE}

## read config_file
logger_ngseasy "[ngseasy_fastqc]:Config:[$PROJECT_ID\t$SAMPLE_ID\t$FASTQ1\t$FASTQ2\t$PROJECT_DIR\t$DNA_PREP_LIBRARY_ID\t$NGS_PLATFORM\t
$NGS_TYPE\t$BAIT\t$CAPTURE\t$GENOMEBUILD\t$FASTQC\t$TRIM\t$BSQR\t$REALN\t$ALIGNER\t$VARCALLER\t$CNV\t$ANNOTATOR\t$CLEANUP\t$NCPU\t
$VERSION\t$NGSUSER]"  ${LOGFILE}

########################################################################################################
## check and make log directory
#
if [ ! -d "${PROJECT_DIR}/${PROJECT_ID}/run_logs/" ]
then
	mkdir ${PROJECT_DIR}/${PROJECT_ID}/run_logs/
fi

########################################################################################################
## check and make logfile
#
if [ ! -e "${LOGFILE}.log" ]
then
	touch ${LOGFILE}.log
fi

########################################################################################################
## Select Genome Build
#
logger_ngseasy "[ngseasy_fastqc]:Checking selected genome"  ${LOGFILE}

if [[ "${GENOMEBUILD}" -eq "b37" ]]; then
  REFDIR="/home/pipeman/ngs_resources/reference_genomes_b37"
  GENOMEINDEX=${REFDIR}/human_g1k_v37
  logger_ngseasy "[ngseasy_fastqc]: Genome Build [${GENOMEBUILD}]" ${LOGFILE}

elif [[ "${GENOMEBUILD}" -eq "hg19" ]]; then
  REFDIR="/home/pipeman/ngs_resources/reference_genomes_hg19"
  GENOMEINDEX=${REFDIR}/ucsc.hg19
  logger_ngseasy "[ngseasy_fastqc]: Genome Build [${GENOMEBUILD}]"  ${LOGFILE}

else
  logger_ngseasy "No genome selected. Exiting. Choose one of [b37] or [hg19]"  ${LOGFILE}
  exit 1
fi


########################################################################################################
## OUTPUT SAMPLE DIR 
#
SOUT=${PROJECT_DIR}/${PROJECT_ID}/${SAMPLE_ID}

logger_ngseasy "[ngseasy_fastqc]:Sample Directory [${SOUT}] "

########################################################################################################
## check local dir exists
#
if [ ! -d "${PROJECT_DIR}/${PROJECT_ID}/${SAMPLE_ID}" ]
then
	logger_ngseasy "[ngseasy_fastqc]: Cant Find Project directory. This is then end. Please Stop and check everything is ok " ${LOGFILE}
	exit 1
else 
	logger_ngseasy "[ngseasy_fastqc]: Setting OUTPUT directory to [${SOUT}]" ${LOGFILE}
fi

########################################################################################################
## check for fastq files exist
#
if [ ! -s "${SOUT}/fastq/${FASTQ1}" ] && [ ! -s "${SOUT}/fastq/${FASTQ2}" ]
then
	logger_ngseasy "[ngseasy_fastqc]: Can't Find fastq files [${SOUT}/fastq/${FASTQ1}] and [${SOUT}/fastq/${FASTQ2}] in [${SOUT}/fastq/] " ${LOGFILE}
	logger_ngseasy "[ngseasy_fastqc]: Please run ngseasy_initiate_fastq or copy files to [${SOUT}/fastq/] " ${LOGFILE}
	exit 1
fi

########################################################################################################
## set new names for copied fastq files
#
# test for fomrat of suffix ie is it fastq or fq
# or _R1.fastq _R1.fq
# ILLUMINA : NA10831_ATCACG_L002_R1_001.fastq.gz
# Illumina FASTQ files use the following naming scheme:
# <sample name>_<barcode sequence>_L<lane (0-padded to 3 digits)>_R<read number>_<set number (0-padded to 3 digits>.fastq.gz

logger_ngseasy "[ngseasy_fastqc]: Checking Fastq file naming conventions" ${LOGFILE}

if [[ "${FASTQ1}" == *_1.fastq.gz ]] 
then

	rawFASTQ1=`basename ${SOUT}/fastq/${FASTQ1} _1.fastq.gz`
	rawFASTQ2=`basename ${SOUT}/fastq/${FASTQ2} _2.fastq.gz`

	fq1_suffix="1.fastq.gz"
	fq2_suffix="2.fastq.gz"

	FQ1=${rawFASTQ1}_${fq1_suffix}
	FQ2=${rawFASTQ2}_${fq2_suffix}

elif [[ "${FASTQ1}" == *_R1.fastq.gz ]] 
then

	rawFASTQ1=`basename ${SOUT}/fastq/${FASTQ1} _R1.fastq.gz`
	rawFASTQ2=`basename ${SOUT}/fastq/${FASTQ2} _R2.fastq.gz`

	fq1_suffix="R1.fastq.gz"
	fq2_suffix="R2.fastq.gz"

	FQ1=${rawFASTQ1}_${fq1_suffix}
	FQ2=${rawFASTQ2}_${fq2_suffix}

elif [[ "${FASTQ1}" == *_1.fq.gz ]] 
then

	rawFASTQ1=`basename ${SOUT}/fastq/${FASTQ1} _1.fq.gz`
	rawFASTQ2=`basename ${SOUT}/fastq/${FASTQ2} _2.fq.gz`

	fq1_suffix="1.fq.gz"
	fq2_suffix="2.fq.gz"  

	FQ1=${rawFASTQ1}_${fq1_suffix}
	FQ2=${rawFASTQ2}_${fq2_suffix}

elif [[ "${FASTQ1}" == *_R1.fq.gz ]] 
then

	rawFASTQ1=`basename ${SOUT}/fastq/${FASTQ1} _R1.fq.gz`
	rawFASTQ2=`basename ${SOUT}/fastq/${FASTQ2} _R2.fq.gz`

	fq1_suffix="R1.fq.gz"
	fq2_suffix="R2.fq.gz"  

	FQ1=${rawFASTQ1}_${fq1_suffix}
	FQ2=${rawFASTQ2}_${fq2_suffix}

elif [[ "${FASTQ1}" == *_L*_R1_[0-9][0-9][0-9].fastq.gz ]] 
then

	logger_ngseasy "[ngseasy_fastqc]:Illumina fastq naming scheme"
	
	illprefix1=`basename ${SOUT}/fastq/${FASTQ1} .fastq.gz`
	illprefix2=`basename ${SOUT}/fastq/${FASTQ2} .fastq.gz`
	
	FQ1=${FASTQ1}
	FQ2=${FASTQ2}

elif [[ "${FASTQ1}" == *_L*_R1_[0-9][0-9][0-9][0-9].fastq.gz ]] 
then

	logger_ngseasy "[ngseasy_fastqc]:Illumina fastq naming scheme"
	
	illprefix1=`basename ${SOUT}/fastq/${FASTQ1} .fastq.gz`
	illprefix2=`basename ${SOUT}/fastq/${FASTQ2} .fastq.gz`
	
	FQ1=${FASTQ1}
	FQ2=${FASTQ2}

else

	logger_ngseasy "[ngseasy_fastqc]: Fastq naming format not recognised for files [$FASTQ1] [$FASTQ2]" ${LOGFILE} 
	logger_ngseasy "[ngseasy_fastqc]: This should be one of [_1.fastq.gz] [_1.fq.gz] [_R1.fastq.gz] [_R1.fq.gz]" ${LOGFILE}
	logger_ngseasy "[ngseasy_fastqc]: or one of Illuminas stoopid names eg [_R1_001.fastq.gz]" ${LOGFILE}
	exit 1
fi        

	logger_ngseasy "[ngseasy_fastqc]: FQ1 [${FQ1}]" ${LOGFILE}
	logger_ngseasy "[ngseasy_fastqc]: FQ2 [${FQ2}]" ${LOGFILE}
	sleep 2s 
	
########################################################################################################
#---------------------------------------FASTQC---------------------------------------------------------#
########################################################################################################

########################################################################################################
## check if qc'd data alread exists 
#
fqout1="${SOUT}/fastq/${rawFASTQ1}_1_fastqc.html"
fqout2="${SOUT}/fastq/${rawFASTQ2}_2_fastqc.html"

if [[ -e "${fqout1}" ]] && [[ -e "${fqout2}" ]]; then

	logger_ngseasy "[ngseasy_fastqc]:Check if FastQC Data already exists [$fqout1] and [$fqout2]" ${LOGFILE}
	logger_ngseasy "[ngseasy_fastqc]:FastQC Data already exists...skipping this bit" ${LOGFILE}

elif [[ -e "${SOUT}/fastq/${illprefix1}_fastqc.html" ]] && [[ -e "${SOUT}/fastq/$illprefix2}_fastqc.html" ]]; then
	logger_ngseasy "[ngseasy_fastqc]:Check if FastQC Data already exists [${SOUT}/fastq/${illprefix1}_fastqc.html] and [${SOUT}/fastq/${illprefix2}_fastqc.html]" ${LOGFILE}
	logger_ngseasy "[ngseasy_fastqc]:FastQC Data already exists...skipping this bit" ${LOGFILE}

elif [[ "$FASTQC" == "qc-fastqc" ]]; then


	logger_ngseasy "[ngseasy_fastqc]:START: FastQC on raw Fastq files" ${LOGFILE}
	sleep 1s

########################################################################################################
## Docker Output Dir: this is the mouned directory set by ngseasy_volumes_container
#
DOCKERHOME="/home/pipeman/ngs_projects"

########################################################################################################
## Docker OUTPUT SAMPLE DIR 
#
SOUTDocker="${DOCKERHOME}/${PROJECT_ID}/${SAMPLE_ID}"

########################################################################################################
## BAM FILE NAME
#
# SAMPLE_ID.WEX.PE.ILLUMINA.atrim.bwa.b37.dupemk.bam
#
BAM_PREFIX="${SAMPLE_ID}.${NGS_TYPE}.${DNA_PREP_LIBRARY_ID}.${NGS_PLATFORM}.${TRIM}.${ALIGNER}.${GENOMEBUILD}"

########################################################################################################
## Docker run compbio/ngseasy-fastqc
## call docker: run as -d in background (-d does not work with --rm=true). 
## This runs all containers in background..simultaneuously!
#
logger_ngseasy "[ngseasy_fastqc]:[cmd]:docker run -d -v ${PROJECT_DIR}:/home/pipeman/ngs_projects -w /home/pipeman -e HOME=/home/pipeman -e USER=pipeman --user pipeman --name fastqc_${BAM_PREFIX} -t compbio/ngseasy-fastqc:${NGSEASYVERSION} /usr/local/pipeline/FastQC/fastqc --threads 2 --extract --outdir ${SOUTDocker}/fastq ${SOUTDocker}/fastq/${FQ1} ${SOUTDocker}/fastq/${FQ2}" ${LOGFILE}

	${DOCKER_RUN} \
	-d \
	-v ${PROJECT_DIR}:/home/pipeman/ngs_projects \
	--name fastqc_${BAM_PREFIX} \
	-t compbio/ngseasy-fastqc:${NGSEASYVERSION} /usr/local/pipeline/FastQC/fastqc --threads 2 --extract \
	--dir ${SOUTDocker}/tmp --outdir ${SOUTDocker}/fastq ${SOUTDocker}/fastq/${FQ1} ${SOUTDocker}/fastq/${FQ2}

########################################################################################################
## QUIT IF no-fastqc option is selected
#
elif [[ "$FASTQC" == "no-fastqc" ]]; then
	logger_ngseasy "[ngseasy_fastqc]:no-fastqc option selected. Skipping this sample [${BAM_PREFIX}]" ${LOGFILE}
else
	logger_ngseasy "[ngseasy_fastqc]:ERROR: FASTQC option is not set. Should be one of [qc-fastqc] or [no-fastqc]" ${LOGFILE}
	sleep 1s
	exit 1
fi
########################################################################################################
# permissions
#
chmod -R 777 ${SOUT}/*
done < ${RUNFILE}
########################################################################################################