#!/bin/bash

################################################################
# Program: ngseasy_initiate_project
# Version 1.0 
# Author: Stephen Newhouse (stephen.j.newhouse@gmail.com)
#################################################################

## Set version and run date
#
NGSEASYVERSION="1.0"
RUNDATE=`date +"%d%m%y"`

## test if docker is intsalled and exit if not
#
command -v docker >/dev/null 2>&1 || { echo -e "Docker (https://docs.docker.com/installation) not installed.\nAborting." >&2; exit 1; }
DOCKERVERSION=`docker version`
echo -e "Docker Installed:\n\n${DOCKERVERSION}\n\n"

###########################################################################################
## default options
###########################################################################################

config_tsv=""
project_directory=""

###########################################################################################
## global logging fuction
###########################################################################################

function logger_ngseasy() {
 message=${1}
 mylogfile=${2}
 echo -e [`date`]":[NGSEASY:${NGSEASYVERSION}]:"${message}":[${USER}]:[`uname -a`]" >> ${mylogfile}.log;
 echo -e [`date`]":[NGSEASY:${NGSEASYVERSION}]:"${message}":[${USER}]:[`uname -a`]"
}

###########################################################################################
## global usage
###########################################################################################
function ngseasy_initiate_project_usage() {
    echo "
Program: ngseasy_initiate_project
Version 1.0
Author: Stephen Newhouse (stephen.j.newhouse@gmail.com)

ngseasy_initiate_project sets up the project file directories. You only need to run this once per project

usage:   ngseasy_initiate_project -c <config_file> -d <project_directory>

options: -h  show this message
	 -c   Config pipeline file
	 -d   Base directory for [ngs_projects](fastq_raw, run_logs, config_files)
"
}


###########################################################################################
## get options for command line args
###########################################################################################
while  getopts "hc:d:" opt
do

    case ${opt} in
        h)
        usage #print help
        exit 0
        ;;
        
        c)
        config_tsv=${OPTARG}
        ;;
        
        d)
        project_directory=${OPTARG}
        ;;

    esac
done

###########################################################################################
## Check options passed in.
###########################################################################################

if test -z "$2"
    then
    usage_ngseasy
    sleep 1s
    exit 1
fi

###########################################################################################
## check ${project_directory} exists.
###########################################################################################
logger_ngseasy "[ngseasy]:Check if project dir [${project_directory}] exists"

if [[ ! -d "${project_directory}" ]]
  then
      usage_ngseasy;
      logger_ngseasy "[ngseasy]:ERROR:${project_directory} does not exist. Exiting."
      sleep 2s
      exit 1;
fi

###########################################################################################
## Make log file ##
###########################################################################################

## strip path if user enters config with full path specified
configfile_name=`basename ${config_tsv}`

# set logile name and make it if it does not exist
config_run_log="${project_directory}/run_logs/ngseasy.${NGSEASYVERSION}.${configfile_name}.${RUNDATE}"

if [[ ! -e "${config_run_log}.log" ]]
then
    logger_ngseasy "[ngseasy]:Making log file [${config_run_log}.log]"

    touch ${config_run_log}.log
    
    logger_ngseasy "[ngseasy]:Log file [${config_run_log}.log]"

else
    logger_ngseasy "[ngseasy]:Log file [${config_run_log}.log]"

fi

###########################################################################################
## check config_tsv exists.
###########################################################################################

# find out where we are running from 
my_current_dirctory=`pwd`

logger_ngseasy "[ngseasy]:Current working directory [${my_current_dirctory}]" ${config_run_log}
logger_ngseasy "[ngseasy]:Config file set as [${config_tsv}]" ${config_run_log}
sleep 1s

## check if user has used full path to specify config_tsv
# strip path if user enters config with full path specified
# and the move to the dir containing the config_tsv
#
config_directory_path=`dirname ${config_tsv}`

if [[ "${config_directory_path}" == "." ]]; then
    working_dir="${my_current_dirctory}"
    logger_ngseasy "[ngseasy]:Path to config file directory detected as [${working_dir}]" ${config_run_log}
    logger_ngseasy "[ngseasy]:Setting Path to config file" ${config_run_log}
    logger_ngseasy "[ngseasy]:Config file location set to [${working_dir}]" ${config_run_log}
    logger_ngseasy "[ngseasy]:Moving to Config file location [${working_dir}] to make life easy" ${config_run_log}
    
    # move to location of config file
    cd ${working_dir}
    
    # check if file exists
    configfile_name=`basename ${config_tsv}`

if [[ ! -e "./${configfile_name}" ]]; then 
    logger_ngseasy "[ngseasy]:ERROR:Config file [${config_tsv}] does not exist. Exiting" ${config_run_log}
    sleep 1s
    exit 1
else
    logger_ngseasy "[ngseasy]:Config file name [${configfile_name}] detected" ${config_run_log}
fi
    
else
    working_dir="${config_directory_path}"
    logger_ngseasy "[ngseasy]:Path to config file directory detected as [${working_dir}]" ${config_run_log}
    logger_ngseasy "[ngseasy]:Setting Path to config file" ${config_run_log}
    logger_ngseasy "[ngseasy]:Config file location set to [${working_dir}]" ${config_run_log}
    logger_ngseasy "[ngseasy]:Moving to Config file location [${working_dir}] to make life easy" ${config_run_log}
    
    # move to location of config file
    cd ${working_dir}
    
    # check if file exists
    configfile_name=`basename ${config_tsv}`
    
if [[ ! -e "./${configfile_name}" ]]; then 
    logger_ngseasy "[ngseasy]:ERROR:Config file [${config_tsv}] does not exist. Exiting" ${config_run_log}
    sleep 1s
    exit 1
else
    logger_ngseasy "[ngseasy]:Config file name [${configfile_name}] detected" ${config_run_log}
fi

fi

####################################################################################################################
## project list
# config_tsv=config_file
#
logger_ngseasy "[ngseasy_initiate_project]:CMD: awk 'NR >1 {print $5"/"$1}' ${config_tsv} | sort | uniq > ${HOME}/ngseasy_tmp/Project_list" ${config_run_log}
awk 'NR >1 {print $5"/"$1}' ${config_tsv} | sort | uniq > ${HOME}/ngseasy_tmp/Project_list

while read -f PROJECTNAME
do

    if [[ ! -d "${project_directory}/${PROJECTNAME}" ]]; then

        mkdir -p ${project_directory}/${PROJECTNAME}
        chmod -R 776 ${project_directory}/${PROJECTNAME}

        logger_ngseasy "[ngseasy_initiate_project]:Making [${project_directory}/${PROJECTNAME}] project directory" ${config_run_log}

    else 
        logger_ngseasy "[ngseasy_initiate_project]:Project directory [${project_directory}/${PROJECTNAME}] Exists" ${config_run_log}

    fi    

done < ${HOME}/ngseasy_tmp/Project_list
wait


####################################################################################################################
## sample lists
## PROJECT_DIR/PROJECT_ID/SAMPLE_ID
#
logger_ngseasy "[ngseasy_initiate_project]:CMD: awk 'NR >1 {print $5"/"$1"/"$2}' ${config_tsv} | sort | uniq > ${HOME}/ngseasy_tmp/ProjectBySample_list" ${config_run_log}

awk 'NR >1 {print $5"/"$1"/"$2}' ${config_tsv} | sort | uniq > ${HOME}/ngseasy_tmp/ProjectBySample_list
  
## Read project_list
#
while read -r f1
do

PROJECTDIRS=$f1

    if [[ ! -d "${PROJECTDIRS}" ]]
        then
        
            logger_ngseasy "[ngseasy_initiate_project]:${PROJECTDIRS} Does Not Exist" ${config_run_log}
            logger_ngseasy "[ngseasy_initiate_project]:Making Project Directories..." ${config_run_log}
            
            logger_ngseasy "[ngseasy_initiate_project]:CMD: mkdir -p ${PROJECTDIRS}" ${config_run_log}
            mkdir -p ${PROJECTDIRS}
            
            logger_ngseasy "[ngseasy_initiate_project]:CMD: mkdir -p ${PROJECTDIRS}/fastq" ${config_run_log}
            
            mkdir -p ${PROJECTDIRS}/fastq 
            
            logger_ngseasy "[ngseasy_initiate_project]:CMD: mkdir -p ${PROJECTDIRS}/tmp" ${config_run_log}
            
            mkdir -p ${PROJECTDIRS}/tmp 
            
            logger_ngseasy "[ngseasy_initiate_project]:CMD: mkdir -p ${PROJECTDIRS}/alignments" ${config_run_log}
            
            mkdir -p ${PROJECTDIRS}/alignments 
            
            logger_ngseasy "[ngseasy_initiate_project]:CMD: mkdir -p ${PROJECTDIRS}/vcf" ${config_run_log}
            
            mkdir -p ${PROJECTDIRS}/vcf 
            
            logger_ngseasy "[ngseasy_initiate_project]:CMD: mkdir -p ${PROJECTDIRS}/reports" ${config_run_log}
            
            mkdir -p ${PROJECTDIRS}/reports 
            
            logger_ngseasy "[ngseasy_initiate_project]:CMD: mkdir -p ${PROJECTDIRS}/fastq" ${config_run_log}
            mkdir -p ${PROJECTDIRS}/config_files
            
            #logger_ngseasy "[ngseasy_initiate_project]:CMD: mkdir -p ${PROJECTDIRS}/run_logs" ${HOME}/ngseasy_logs/${USER}.${RUNDATE}.NGSEASY
            #mkdir -p ${PROJECTDIRS}/run_logs            
            
        else
            logger_ngseasy "[ngseasy_initiate_project]:${PROJECTDIRS}] Exist" ${config_run_log}
    fi

done < ${HOME}/ngseasy_tmp/ProjectBySample_list
wait

## open it up to all 
chmod -R 776 ${project_directory}/

## remove lists
#
    rm ${HOME}/ngseasy_tmp/ProjectBySample_list
    rm ${HOME}/ngseasy_tmp/Project_list



