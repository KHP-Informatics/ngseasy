#!/bin/bash
###########################################################################################
# Program: ngseasy
# Version 1.0 
# Author: Stephen Newhouse (stephen.j.newhouse@gmail.com)
###########################################################################################

###########################################################################################
## Set version and run date
###########################################################################################
NGSEASYVERSION="1.0"
RUNDATE=`date +"%d%m%y"`

echo -e "\n\n###########################################################################################"
echo -e "# Program: ngseasy"
echo -e "# Version ${NGSEASYVERSION}"
echo -e "# Author: Stephen Newhouse (stephen.j.newhouse@gmail.com)"
echo -e "###########################################################################################\n\n"

###########################################################################################
## test if docker is intsalled and exit if not
###########################################################################################

command -v docker >/dev/null 2>&1 || { echo -e "\n\nDocker not installed.\n\nAborting....." >&2; exit 1; }
echo -e "Checking Docker Version and Info\n"
DOCKERVERSION=`docker version`
DOCKERINFO=`docker info`

echo -e "\n----------------------------------\nDocker Version\n----------------------------------\n${DOCKERVERSION}\n----------------------------------\n"Docker Info"\n----------------------------------\n${DOCKERINFO}\n----------------------------------\n"
echo -e [`date`]":[NGSEASY:${NGSEASYVERSION}]:"[Log:START]":[${USER}]:[`uname -a`]" 
echo -e "\n----------------------------------\nDocker Version\n----------------------------------\n${DOCKERVERSION}\n----------------------------------\n"Docker Info"\n----------------------------------\n${DOCKERINFO}\n----------------------------------\n"
sleep 1s

###########################################################################################
## global logging fuction
###########################################################################################

function logger_ngseasy() {
 message=${1}
 mylogfile=${2}
 echo -e [`date`]":[NGSEASY:${NGSEASYVERSION}]:"${message}":[${USER}]:[`uname -a`]" >> ${mylogfile}.log;
 echo -e [`date`]":[NGSEASY:${NGSEASYVERSION}]:"${message}":[${USER}]:[`uname -a`]"
}

###########################################################################################
## global usage
###########################################################################################

function usage_ngseasy() {
    echo "
Program: ngseasy
Version 1.0
Author: Stephen Newhouse (stephen.j.newhouse@gmail.com)

usage:   ngseasy -c <config_file> -d <project_directory>

options:  -c  STRING	configuration file
          -d  STRING	project directory
          -h  NULL	show this message 
"
}

###########################################################################################
## default options
###########################################################################################

config_tsv=""
project_directory=""

###########################################################################################
## get options for command line args
###########################################################################################

#while  getopts "hc:d:pf" opt

while  getopts "hc:d:" opt
do

  case ${opt} in

   h)
   usage_ngseasy #print help
   exit 0
   ;;

   c)
   config_tsv=${OPTARG}
   echo -e "CONFIG FILE [-c] = ${config_tsv}"
   ;;

   d)
   project_directory=${OPTARG}
   echo -e  "PROJECT DIR [-d] = ${project_directory}"
   ;;

   esac
done

###########################################################################################
## Check options passed in.
###########################################################################################

if test -z "$2"
	then
	usage_ngseasy
	sleep 1s
	exit 1
fi

###########################################################################################
## check ${project_directory} exists.
###########################################################################################
logger_ngseasy "[ngseasy]:Check if project dir [${project_directory}] exists"

if [[ ! -d "${project_directory}" ]]
  then
	  usage_ngseasy;
	  logger_ngseasy "[ngseasy]:ERROR:${project_directory} does not exist. Exiting."
	  sleep 2s
	  exit 1;
fi

###########################################################################################
## Make log file ##
###########################################################################################

## strip path if user enters config with full path specified
configfile_name=`basename ${config_tsv}`

# set logile name and make it if it does not exist
config_run_log="${project_directory}/run_logs/ngseasy.${NGSEASYVERSION}.${configfile_name}.${RUNDATE}"

if [[ ! -e "${config_run_log}.log" ]]
then
	logger_ngseasy "[ngseasy]:Making log file [${config_run_log}.log]"

	touch ${config_run_log}.log
	
	logger_ngseasy "[ngseasy]:Log file [${config_run_log}.log]"

else
	logger_ngseasy "[ngseasy]:Log file [${config_run_log}.log]"

fi


###########################################################################################
## check config_tsv exists.
###########################################################################################

# find out where we are running from 
my_current_dirctory=`pwd`

logger_ngseasy "[ngseasy]:Current working directory [${my_current_dirctory}]" ${config_run_log}
logger_ngseasy "[ngseasy]:Config file set as [${config_tsv}]" ${config_run_log}
sleep 1s

## check if user has used full path to specify config_tsv
# strip path if user enters config with full path specified
# and the move to the dir containing the config_tsv
#
config_directory_path=`dirname ${config_tsv}`

if [[ "${config_directory_path}" == "." ]]; then
	working_dir="${my_current_dirctory}"
	logger_ngseasy "[ngseasy]:Path to config file directory detected as [${working_dir}]" ${config_run_log}
	logger_ngseasy "[ngseasy]:Setting Path to config file" ${config_run_log}
	logger_ngseasy "[ngseasy]:Config file location set to [${working_dir}]" ${config_run_log}
	logger_ngseasy "[ngseasy]:Moving to Config file location [${working_dir}] to make life easy" ${config_run_log}
	
	# move to location of config file
	cd ${working_dir}
	
	# check if file exists
	configfile_name=`basename ${config_tsv}`

if [[ ! -e "./${configfile_name}" ]]; then 
	logger_ngseasy "[ngseasy]:ERROR:Config file [${config_tsv}] does not exist. Exiting" ${config_run_log}
	sleep 1s
	exit 1
else
	logger_ngseasy "[ngseasy]:Config file name [${configfile_name}] detected" ${config_run_log}
fi
	
else
	working_dir="${config_directory_path}"
	logger_ngseasy "[ngseasy]:Path to config file directory detected as [${working_dir}]" ${config_run_log}
	logger_ngseasy "[ngseasy]:Setting Path to config file" ${config_run_log}
	logger_ngseasy "[ngseasy]:Config file location set to [${working_dir}]" ${config_run_log}
	logger_ngseasy "[ngseasy]:Moving to Config file location [${working_dir}] to make life easy" ${config_run_log}
	
	# move to location of config file
	cd ${working_dir}
	
	# check if file exists
	configfile_name=`basename ${config_tsv}`
	
if [[ ! -e "./${configfile_name}" ]]; then 
	logger_ngseasy "[ngseasy]:ERROR:Config file [${config_tsv}] does not exist. Exiting" ${config_run_log}
	sleep 1s
	exit 1
else
	logger_ngseasy "[ngseasy]:Config file name [${configfile_name}] detected" ${config_run_log}
fi

fi


############################################################################################
## check Num feilds in  ${config_tsv}
###########################################################################################

logger_ngseasy "[ngseasy]:Reading [${config_tsv}] " ${config_run_log}

numcols=`awk '{ print NF }' ${config_tsv} | sort -g | head -1`

logger_ngseasy "[ngseasy]:Number of fields detected [${numcols}] " ${config_run_log}

if [[  "${numcols}" -lt 23 ]] 
then
    logger_ngseasy "[ngseasy]:ERROR:[${config_tsv}] format issue. Check your file! " ${config_run_log}
    sleep 1s
    exit 1;
else 
    logger_ngseasy "[ngseasy]:Numcols of [${config_tsv}] ok:[$numcols]" ${config_run_log}	     
fi



###########################################################################################
## Set up Project Dir and Fastq Files
###########################################################################################

logger_ngseasy "[ngseasy]:Calling ngseasy_initiate_project" ${config_run_log}

	/bin/bash  ngseasy_initiate_project -c ${config_tsv} -d ${project_directory}  2>&1 | tee -a  ${config_run_log}.log
	wait

logger_ngseasy "[ngseasy]:Calling ngseasy_initiate_fastq" ${config_run_log}

	/bin/bash  ngseasy_initiate_fastq -c ${config_tsv} -d ${project_directory}  2>&1 | tee -a  ${config_run_log}.log
	wait

###########################################################################################
## FastQC: will run as many jobs as allowed by nproc on system
###########################################################################################

## check ${config_tsv}. is this a batch file or the orginal config file 
#
logger_ngseasy "[ngseasy]:Checking [${config_tsv}] format" ${config_run_log}

hasheader=`sed 1q ${config_tsv} | grep PROJECT_ID | wc -l | awk '{print $1}'`

if [[ "${config_tsv}" == *.batch.* ]]
then
	logger_ngseasy "[ngseasy]:[${config_tsv}] is a BACTH file ie a subset of the original config file" ${config_run_log}
	FILE=${config_tsv}

## if header present then remove it
elif [[ "$hasheader" -eq 1 ]]
then
	logger_ngseasy "[ngseasy]:[${config_tsv}] header present...gonna remove this" ${config_run_log}
	logger_ngseasy "[ngseasy]:[cmd]:sed 1d ${config_tsv} > ${config_tsv}.tmp" ${config_run_log}
	sed 1d ${config_tsv} > ${config_tsv}.tmp
	FILE=${config_tsv}.tmp
else
	logger_ngseasy "[ngseasy]:[${config_tsv}] is seemingly perfect. Well Done" ${config_run_log}
	FILE=${config_tsv}
fi

## number of samples to run ####
#
numsamples=`wc -l ${config_tsv}.tmp | awk '{print $1}'`  
logger_ngseasy "[ngseasy]:Number of samples [$numsamples]" ${config_run_log} 

## number of cores available
# mincpuallowed=8
numcores=`nproc`
logger_ngseasy "[ngseasy]:Number of available cores [$numcores]" ${config_run_log} 

## check if number of cpu less than 2 and exit if so ####
#
if [[ "$numcores" -lt 2 ]]; then
	logger_ngseasy "[ngseasy]:Number of available cores less than 2. Exiting " ${config_run_log}
	sleep 1s
	exit 1;
fi

## muber of jobs fastqc calls allowed to run at the same  ####
#
numjobsallowed=$(expr $numcores / 2)
logger_ngseasy "[ngseasy]:Number of FastQC Jobs allowed [$numjobsallowed] ie 2 cores per sample" ${config_run_log} 

## split config file into batches : N samples per batch. N samples == njobs
#
if [[ "$numsamples"  -gt "$numjobsallowed" ]]; then
	logger_ngseasy "[ngseasyc]:Number samples [$numsamples] greater than number of cpu jobs allowed [$numjobsallowed]" ${config_run_log} 
	logger_ngseasy "[ngseasy]:splitting config file in to batches of at most [${numjobsallowed}] samples" ${config_run_log} 
	logger_ngseasy "[ngseasy]:[cmd]:split -d -l ${numjobsallowed} --additional-suffix=\".batch.config.tmp\" ${config_tsv}.tmp" ${config_run_log} 
	split -d -l ${numjobsallowed} --additional-suffix=".batch.${config_tsv}.tmp" ${config_tsv}.tmp
else
	logger_ngseasy "[ngseasy]:Number of jobs to run [$numsamples]" ${config_run_log} 
	logger_ngseasy "[ngseasy]:making [original.batch.${config_tsv}.tmp]" ${config_run_log} 
	cp -v ${config_tsv}.tmp original.batch.${config_tsv}.tmp
fi

## get file names to process ####
#
logger_ngseasy "[ngseasy]: Getting config file names to process " ${config_run_log} 
batchfiles=`ls | grep batch` 

## set num running jobs counter to 0 ####
#
ndockerjobs=0

## loop through config files and run fastqc ####
#

logger_ngseasy "[ngseasy]:START FASTQC LOOP" ${config_run_log} 

for MYBATCH in `ls $batchfiles`
do
	logger_ngseasy "[ngseasy]:[cmd]:ngseasy_fastqc -c ${MYBATCH} -d ${project_directory}" ${config_run_log} 

## call ngseasy_fastqc ####
#
logger_ngseasy "[ngseasy]:Calling ngseasy_fastqc" ${config_run_log}

	/bin/bash  ngseasy_fastqc -c ${MYBATCH} -d ${project_directory}  2>&1 | tee -a  ${config_run_log}.log	

## get number of jobs running in background
#
ndockerjobs=`docker ps -a | grep fastqc | grep Up | wc -l`;

logger_ngseasy "[ngseasy]:Number of Docker FastQC jobs started [$ndockerjobs]" ${config_run_log}
sleep 1s

## while jobs still running ie not equal to 0 then sleep for 10 seconds ####
#
logger_ngseasy "[ngseasy]:Checking for the number of running Docker FastQC jobs every 1 minute" ${config_run_log}
logger_ngseasy "[ngseasy]:When the number of running Docker FastQC jobs hits [0], the next batch will begin" ${config_run_log}

logger_ngseasy "[ngseasy]:Number of Docker FastQC jobs running [$ndockerjobs]" ${config_run_log}
sleep 1s

while [ "${ndockerjobs}" -gt 0 ]; do
	sleep 60s;
	ndockerjobs=`docker ps -a | grep fastqc | grep Up | wc -l`;
	logger_ngseasy "[ngseasy]:Number of Docker FastQC jobs running [$ndockerjobs]" 
done
done

## remove docker Exited containers ####
#
ndockerjobs_running=`docker ps -a | grep fastqc | grep Exited | wc -l`;

if [ "${ndockerjobs_running}" -gt 0 ]; then 

  logger_ngseasy "[ngseasy]:cleaning up compbio/ngseasy-fastqc:${NGSEASYVERSION} container images" ${config_run_log}  
  logger_ngseasy "[ngseasy]:[cmd]:docker rm -f \$(docker ps -a | grep fastqc  | grep Exited | awk '{print \$1}')" ${config_run_log}
  
  docker rm -f $(docker ps -a | grep fastqc  | grep Exited | awk '{print $1}')

fi

logger_ngseasy "[ngseasy]:END ngseasy_fastqc" ${config_run_log} 


###################################################################################
## Quality Trimming
###################################################################################

logger_ngseasy "[ngseasy]:Calling ngseasy_trimmomatic" ${config_run_log}

	/bin/bash  ngseasy_trimmomatic -c ${config_tsv} -d ${project_directory} 2>&1 | tee -a  ${config_run_log}.log


###################################################################################
## Alignment 
###################################################################################

logger_ngseasy  "[ngseasy]:Calling ngseasy_alignment"  ${config_run_log}

	/bin/bash  ngseasy_alignment -c ${config_tsv} -d ${project_directory} 2>&1 | tee -a  ${config_run_log}.log


## to add: option if NCPU less than nproc or 8, 16 then call mulitple alignments at the same 

###################################################################################
## Indel realignment 
###################################################################################

logger_ngseasy  "[ngseasy]:Calling ngseasy_realn"  ${config_run_log}

	/bin/bash ngseasy_realn -c ${config_tsv} -d ${project_directory} 2>&1 | tee -a  ${config_run_log}.log


###################################################################################
## Base Quality Score Recalibration
###################################################################################

logger_ngseasy  "[ngseasy]:Calling ngseasy_bsqr"  ${config_run_log}

	/bin/bash ngseasy_bsqr -c ${config_tsv} -d ${project_directory} 2>&1 | tee -a  ${config_run_log}.log


##################################################################################
## Variant calling
###################################################################################

logger_ngseasy  "[ngseasy]:Calling ngseasy_variant_calling"  ${config_run_log}

  /bin/bash ngseasy_variant_calling -c ${config_tsv} -d ${project_directory} 2>&1 | tee -a  ${config_run_log}.log

###################################################################################
## Alignment statistics
###################################################################################

#logger_ngseasy  "[ngseasy]:Calling ngseasy_alignment_qc"  ${config_run_log}
#	/bin/bash ngseasy_alignment_qc -c ${config_tsv} -d ${project_directory} 2>&1 | tee -a  ${config_run_log}.log


###################################################################################
## CNV Calling: coming soon
###################################################################################

###################################################################################
## Annotation: coming soon
###################################################################################

###################################################################################
## NGS Report: coming soon
###################################################################################

# sex check with chanjo
# alias full_clinical_freebayes NO GATK NO REAL NO RECAL OK FOR LOCKED UP SYSTEM BUT 
# NOT FOR POP OR COMP BTW SITES

