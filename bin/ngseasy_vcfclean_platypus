#!/bin/bash
#################################################################################
# usage
#################################################################################

function usage {
    echo "
Program: ngseasy_vcfclean_platypus
Version 1.0-r001
Author: Stephen Newhouse (stephen.j.newhouse@gmail.com)

usage:   ngseasy_vcfclean_platypus -v <VCF> -f <Variant Caller>

options:  -v  STRING  VCF file : [ vcf or vcf.gz]
          -f  STRING  Variant Caller : [platypus]
          -h  NULL    show this message

WARNING: This is a quick and dirty fix to make platypus vcf more like GATK and
Freebayes.
"
}

#################################################################################
# get options
#################################################################################
VCF_INPUT=""
VCF_FORMAT=""

while  getopts "hv:f:" opt
do
    case ${opt} in
    h)
    usage #print help
    exit 0
    ;;
    v)
    VCF_INPUT=${OPTARG}
    ;;
    f)
    VAR_CALLER=${OPTARG}
    ;;
    esac
done

## check options passed
if [[ $# -lt 2 ]]
    then
    echo -e "\nERROR:No options found. Exiting\nTry: [ngseasy_vcfclean_platypus -h]\n"
    usage
    exit 1
fi
## Some user info...
echo ""
echo -e "WARNING: This is a quick and dirty fix to make platypus vcf more like GATK and Freebayes."
echo ""
echo -e "VCF_INPUT=[${VCF_INPUT}]"
echo -e "VCF_FORMAT=[${VAR_CALLER}]"
#################################################################################
## make compatible with other tools and mathc GATK/Freebayes annotaions
#################################################################################
VCF=`basename ${VCF_INPUT}`
VCF_EXT=${VCF##*.}

if [[ ${VAR_CALLER} == "platypus" ]]
    then
        VCF=`basename ${VCF_INPUT} .gz`
        if [[ ${VCF_EXT} == "gz" ]]
            then
            echo -e "VCF File Extension is [gz]"
            zcat ${VCF}.gz | \
            sed s/TC\=/DP\=/g | sed s/ID=\TC\,/ID=\DP\,/g | \
            sed s/FR\=/AF\=/g | sed s/ID=\FR\,/ID=\AF\,/g | \
            sed s/GL\=/PL\=/g | sed s/ID\=GL\,/ID\=PL\,/g | \
            sed s/"GT:GL:GOF:GQ:NR:NV"/"GT:PL:GOF:GQ:DP:NV"/g | bgzip -c > ${VCF}.alt.vcf.gz && \
            tabix ${VCF}.alt.vcf.gz
            echo -e "Fied VCF=[${VCF}.alt.vcf.gz]"
        elif [[ ${VCF_EXT} == "vcf" ]]
        then
        VCF=`basename ${VCF_INPUT} .vcf`
        echo -e "VCF File Extension is [vcf]"
        cat ${VCF}.vcf | \
        sed s/TC\=/DP\=/g | sed s/ID=\TC\,/ID=\DP\,/g | \
        sed s/FR\=/AF\=/g | sed s/ID=\FR\,/ID=\AF\,/g | \
        sed s/GL\=/PL\=/g | sed s/ID\=GL\,/ID\=PL\,/g | \
        sed s/"GT:GL:GOF:GQ:NR:NV"/"GT:PL:GOF:GQ:DP:NV"/g |  bgzip -c > ${VCF}.alt.vcf.gz && \
        tabix ${VCF}.alt.vcf.gz
        echo -e "Fied VCF=[${VCF}.alt.vcf.gz]"
    else
        echo "what format is this? bgzip or not to bgzip?"
    fi
else
    echo "ok only..."
    usage
fi

## TO FIX:- Get GATK/Freebayes equivalents and check GEMINI requirements
# GL:GOF PL == GL
##FORMAT=<ID=NV,Number=.,Type=Integer,Description="Number of reads containing variant in this sample">
##FORMAT=<ID=NR,Number=.,Type=Integer,Description="Number of reads covering variant location in this sample">
##INFO=<ID=TCR,Number=1,Type=Integer,Description="Total reverse strand coverage at this locus">
##INFO=<ID=TCF,Number=1,Type=Integer,Description="Total forward strand coverage at this locus">
##INFO=<ID=TC,Number=1,Type=Integer,Description="Total coverage at this locus">
##INFO=<ID=NR,Number=.,Type=Integer,Description="Total number of reverse reads containing this variant">
##INFO=<ID=FR,Number=.,Type=Float,Description="Estimated population frequency of variant">
