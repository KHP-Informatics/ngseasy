#!/bin/bash

################################################################
# Program: ngseasy_initiate_fastq
# Version 1.0 
# Author: Stephen Newhouse (stephen.j.newhouse@gmail.com)
#################################################################

#################################################################
# clear stuff up
REFDIR=""
GENOMEINDEX=""
PROJECT_ID=""
SAMPLE_ID=""
FASTQ1=""
FASTQ2=""
PROJECT_DIR=""
DNA_PREP_LIBRARY_ID=""
NGS_PLATFORM=""
NGS_TYPE=""
BAIT=""
CAPTURE=""
GENOMEBUILD=""
FASTQC=""
TRIM=""
BSQR=""
REALN=""
ALIGNER=""
VARCALLER=""
CNV=""
ANNOTATOR=""
CLEANUP=""
NCPU=""
NGSEASYVERSION=""
NGSUSER=""
RUNDATE=""
NGSEASY_STEP=""

## Set version and run date
#
NGSEASYVERSION="1.0"
RUNDATE=`date +"%d%m%y"`

## global logging fuction
#
function logger_ngseasy() {
 message=${1}
 mylogfile=${2}
 echo -e [`date`]":[NGSEASY:${NGSEASYVERSION}]:"${message}":[${USER}]:[`uname -a`]" >> ${mylogfile}.log;
 echo -e [`date`]":[NGSEASY:${NGSEASYVERSION}]:"${message}":[${USER}]:[`uname -a`]"
}


## global usage
#
function ngseasy_initiate_fastq_usage() {
    echo "
Program: ngseasy_initiate_fastq
Version 1.0
Author: Stephen Newhouse (stephen.j.newhouse@gmail.com)

usage:   ngseasy_initiate_fastq -c <config_file> -d <project_directory>

options: -h  show this message

ngseasy_initiate_fastq moves fastq files from raw_fastq stagging are to sample directory
"
}


## Check options passed in.
#
if test -z "$2"
then
  logger_ngseasy "[ngseasy_initiate_fastq]:ERROR:No options found"
  ngseasy_initiate_fastq_usage
  sleep 1s
  exit 1
fi

## get options for command line args
  while  getopts "hc:d:" opt
  do

      case ${opt} in
	  h)
	  ngseasy_initiate_fastq_usage #print help
	  exit 0
	  ;;
	  
	  c)
	  config_tsv=${OPTARG}
	  ;;

	  d)
	  project_directory=${OPTARG}
	  ;; 
      esac
  done

########################################################################################################  
## check config file exists.
#
if [ ! -e "${config_tsv}" ] 
then
      logger_ngseasy "[ngseasy_initiate_fastq]:ERROR : [${config_tsv}] does not exist....exiting "
      ngseasy_trimmomatic_usage;
      sleep 1s; 
      exit 1;
else
      logger_ngseasy "[ngseasy_initiate_fastq]:Configuration file found [${config_tsv}] "
fi

########################################################################################################
## check project_directory exists.
#
if [ ! -d "${project_directory}" ]
  then
    logger_ngseasy "[ngseasy_initiate_fastq]:ERROR: project_directory [${project_directory}] does not exist "
    ngseasy_trimmomatic_usage;
    sleep 1s; 
    exit 1;
else
      logger_ngseasy "[ngseasy_initiate_fastq]:Top Level Project Directory [${project_directory}] "
fi

########################################################################################################
## check Num feilds in  ${config_tsv}
#
logger_ngseasy "[ngseasy_initiate_fastq]:Reading [${config_tsv}] "
logger_ngseasy "[ngseasy_initiate_fastq]:Checking number of feilds in  [${config_tsv}] "

numcols=`awk '{ print NF }' ${config_tsv} | sort -g | head -1`

if [[  "$numcols" -lt 23 ]] 
then
      logger_ngseasy "[ngseasy_initiate_fastq]:ERROR: [${config_tsv}] format issue. Check your file! "
      sleep 1s; 
      exit 1;
  else 
      logger_ngseasy "[ngseasy_initiate_fastq]:Number of expected columns [$numcols] of [${config_tsv}] ok...proceeding... "     
fi

########################################################################################################
## Read config file 

## check ${config_tsv}. is this a batch file or the orginal config file 
#
logger_ngseasy "[ngseasy_initiate_fastq]:Checking [${config_tsv}] format" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}

hasheader=`sed 1q ${config_tsv} | grep PROJECT_ID | wc -l | awk '{print $1}'`

if [[ "${config_tsv}" == *.batch.* ]]
then
  logger_ngseasy "[ngseasy_initiate_fastq}:[${config_tsv}] is a BACTH file ie a subset of the original config file" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
  RUNFILE="${config_tsv}"
  logger_ngseasy "[ngseasy_initiate_fastq}:Setting RUNFILE to [${RUNFILE}]" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
elif [[ "$hasheader" -eq 1 ]]
then
  logger_ngseasy "[ngseasy_initiate_fastq]:[${config_tsv}] header present. Removing this" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
  logger_ngseasy "[ngseasy_initiate_fastq]:[cmd]:sed 1d \${config_tsv} > ${config_tsv}.tmp" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
  sed 1d ${config_tsv} > ${config_tsv}.tmp
  RUNFILE="${config_tsv}.tmp"
  logger_ngseasy "[ngseasy_initiate_fastq]:Setting RUNFILE to [${RUNFILE}]" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
else
  RUNFILE="${config_tsv}"
  logger_ngseasy "[ngseasy_initiate_fastq]:[${RUNFILE}] is seemingly perfect" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
  logger_ngseasy "[ngseasy_initiate_fastq]:Setting RUNFILE to [${RUNFILE}]" ${HOME}/ngseasy_logs/ngseasy.${config_tsv}.${RUNDATE}
fi
  
########################################################################################################
## Read config and loop through all lines calling fastqc docker
#
while read -r f1 f2 f3 f4 f5 f6 f7 f8 f9 f10 f11 f12 f13 f14 f15 f16 f17 f18 f19 f20 f21 f22 f23
do
PROJECT_ID=$f1
SAMPLE_ID=$f2
FASTQ1=$f3
FASTQ2=$f4
PROJECT_DIR=$f5
DNA_PREP_LIBRARY_ID=$f6
NGS_PLATFORM=$f7
NGS_TYPE=$f8
BAIT=$f9
CAPTURE=$f10
GENOMEBUILD=$f11
FASTQC=$f12
TRIM=$f13
BSQR=$f14
REALN=$f15
ALIGNER=$f16
VARCALLER=$f17
CNV=$f18
ANNOTATOR=$f19
CLEANUP=$f20
NCPU=$f21
NGSEASYVERSION=$f22
NGSUSER=$f23
DATE=`date +"%d%m%y"`

########################################################################################################
## LOGFILE 
#
LOGFILE="${PROJECT_DIR}/${PROJECT_ID}/run_logs/${SAMPLE_ID}.${TRIM}.${BSQR}.${REALN}.${ALIGNER}.${RUNDATE}.ngseasy_initiate_fastq"
logger_ngseasy "[ngseasy_initiate_fastq]:logging to [${LOGFILE}.log]"  ${LOGFILE}

## read config_file
logger_ngseasy "[ngseasy_initiate_fastq]:Config:[$PROJECT_ID\t$SAMPLE_ID\t$FASTQ1\t$FASTQ2\t$PROJECT_DIR\t$DNA_PREP_LIBRARY_ID\t$NGS_PLATFORM\t
$NGS_TYPE\t$BAIT\t$CAPTURE\t$GENOMEBUILD\t$FASTQC\t$TRIM\t$BSQR\t$REALN\t$ALIGNER\t$VARCALLER\t$CNV\t$ANNOTATOR\t$CLEANUP\t$NCPU\t
$VERSION\t$NGSUSER]"  ${LOGFILE}


#######################################################################################################
## check and make log directory
#
if [ ! -d "${PROJECT_DIR}/${PROJECT_ID}/run_logs/" ]
then
  mkdir ${PROJECT_DIR}/${PROJECT_ID}/run_logs/
fi

########################################################################################################
## check and make logfile
#
if [ ! -e "${LOGFILE}.log" ]
then
  touch ${LOGFILE}.log
fi
  logger_ngseasy "[ngseasy_initiate_fastq]:Logging to [${LOGFILE}.log] "

########################################################################################################
## OUTPUT SAMPLE DIR 
#
SOUT=${PROJECT_DIR}/${PROJECT_ID}/${SAMPLE_ID}

########################################################################################################
## copy fastq files to sample directory
#
if [ ! -s "${SOUT}/fastq/${FASTQ1}" ] && [ ! -s "${SOUT}/fastq/${FASTQ2}" ]
then
  logger_ngseasy "[ngseasy_initiate_fastq]:Moving fastq files from ${PROJECT_DIR}/raw_fastq/ to ${SOUT}/fastq/ " ${LOGFILE}
    
    mv -v ${PROJECT_DIR}/raw_fastq/${FASTQ1} ${SOUT}/fastq/${FASTQ1}
    mv -v ${PROJECT_DIR}/raw_fastq/${FASTQ2} ${SOUT}/fastq/${FASTQ2}

    logger_ngseasy "[ngseasy_initiate_fastq]:CMD:mv -v ${PROJECT_DIR}/raw_fastq/${FASTQ1} ${SOUT}/fastq/${FASTQ1}" ${LOGFILE}
    logger_ngseasy "[ngseasy_initiate_fastq]:CMD:mv -v ${PROJECT_DIR}/raw_fastq/${FASTQ2} ${SOUT}/fastq/${FASTQ1}" ${LOGFILE}  

    #ln -s ${SOUT}/fastq/${FASTQ1} ${PROJECT_DIR}/raw_fastq/${FASTQ1}
    #ln -s ${SOUT}/fastq/${FASTQ2} ${PROJECT_DIR}/raw_fastq/${FASTQ2}
    
else
  logger_ngseasy "[ngseasy_initiate_fastq]:Fastq Files already exist in ${SOUT}/fastq/ " ${LOGFILE}
  ls ${SOUT}/fastq/
fi

#------permissions------------#
chmod -R 776 ${SOUT}/*

done < ${RUNFILE}
