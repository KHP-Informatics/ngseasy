{"name":"NGSeasy","tagline":"Dockerised Next Generation Sequencing Pipeline (QC, Align, Calling, Annotation)","body":"![NGSeasy_logo](https://github.com/KHP-Informatics/ngseasy/blob/sjn_dev/figs/NGSeasy_logo_0.0.1.png)\r\n\r\nNGSeasy (beta): A [Dockerized](https://www.docker.com/) NGS pipeline and tool-box\r\n=====================================================================================\r\n\r\n**With NGSeasy you can now have full suite of NGS tools up and running on any high end workstation in an afternoon**  \r\n\r\n**Authors:** Stephen J Newhouse and Amos Folarin  \r\n**Release Version:** **1.0-r001**  \r\n**Release:** dirty_tango  \r\n**Publication:** _pending_  \r\n\r\n- **NGSeasy-1.0 Full Production release will be available Late 2015**  \r\n- **NGSeasy-1.0-r001 (dirty_tango) contains most of the core functionality to go from raw fastq to raw vcf calls**\r\n- **NGSeasy will update every 12 months**\r\n- **GUI in development**\r\n- **Lets us know if you want other tools added to NGSeasy**\r\n\r\n[**NGSeasy is completely open source and we encourage interested folks to jump in and get involved in the dev with us.**](https://github.com/KHP-Informatics/ngseasy.git)\r\n\r\n## NGSeasy: Genome Comparison & Analytic Testing ([GCAT](http://www.bioplanet.com/gcat)) Reports \r\nHere we provide a quick look at basic NGSeasy performance (more results coming soon).\r\n\r\n|GCAT Report|Test Data |Pipeline|\r\n|----|----|----|\r\n|[**NGSEASY-NTRIM-BWA-FREEBAYES-D**](http://www.bioplanet.com/gcat/reports/6167-seeirhwtfp/variant-calls/illumina-100bp-pe-exome-150x/ngseasy-ntrim-bwa-freebayes-d/compare-570-270-181/group-read-depth)|[illumina-100bp-pe-exome-150x](https://s3-eu-west-1.amazonaws.com/ngseasy.data/fastq_test_data/illumina.100bp.pe.wex.150x_1.fastq.gz)|[fastq > bwa > freebayes](https://github.com/KHP-Informatics/ngseasy/blob/master/test/ngseasy_test.config.freebayes.tsv)|\r\n|[**NGSEASY-NTRIM-BWA-PLATYPUS-D**](http://www.bioplanet.com/gcat/reports/6264-uzdswfzmkv/variant-calls/illumina-100bp-pe-exome-150x/ngseasy-ntrim-bwa-platypus-d/compare-571-180/group-read-depth)|[illumina-100bp-pe-exome-150x](https://s3-eu-west-1.amazonaws.com/ngseasy.data/fastq_test_data/illumina.100bp.pe.wex.150x_2.fastq.gz)|[fastq > bwa > platypus](https://github.com/KHP-Informatics/ngseasy/blob/master/test/ngseasy_test.config.platypus.tsv)|\r\n\r\nAn example of the run commands:\r\n\r\n```bash\r\nngseasy -c ngseasy_test.config.freebayes.tsv -d /media/Data/ngs_projects\r\nngseasy -c ngseasy_test.config.platypus.tsv  -d /media/Data/ngs_projects\r\n```\r\n\r\n## Author Contact Details\r\n\r\nPlease contact us for help/guidance on using the beta release.\r\n\r\n|Author|email|Twitter| LinkedIn|\r\n|----|----|----|----|\r\n|Dr Stephen J Newhouse| <stephen.j.newhouse@gmail.com>| [@s_j_newhouse](https://twitter.com/s_j_newhouse?lang=en)| View Steve's profile on [LinkedIn](http://uk.linkedin.com/pub/dr-stephen-newhouse/29/89a/11a)|\r\n|Dr Amos Folarin| <amosfolarin@gmail.com>| [@amosfolarin](https://twitter.com/amosfolarin?lang=en)|View Amos's profile on [LinkedIn](http://www.linkedin.com/pub/amos-folarin/34/b06/978)|\r\n\r\n\r\n\r\n## Issues, Questions and Queries\r\n\r\n**Please Direct all queries to [https://github.com/KHP-Informatics/ngseasy/issues]**\r\n\r\nWhen sending bug reports etc please provide:- \r\n\r\n- Date of Download\r\n- OS and version\r\n- Basic Machine Specs (CPU, RAM)\r\n- Network Speed ([Testing Internet Connection Speed](https://github.com/KHP-Informatics/ngseasy/tree/master#recommended-network-speed))\r\n- The Code you ran eg:- `ngseasy -c my.config.tsv -d /My/Dir `\r\n- your config file  \r\n- The exact error as printed to screen\r\n\r\n**WARNING!**\r\nNGSeasy is not [numpty](http://www.urbandictionary.com/define.php?term=Numpty) or bad data proof!  \r\n\r\n**Please read the docs**, stay calm, take your time and think about what you are doing...and if [www.google.com] doesnt help, then please direct all queries to [https://github.com/KHP-Informatics/ngseasy/issues].\r\n\r\n## Install Docker\r\n\r\nFull instructions at https://docs.docker.com/.\r\n\r\nSome fixes to make life easy...allows you to run ``docker`` without ``sudo``.\r\n\r\nThis may differ for your OS, and mostly applies to flavours of ``Linux``. Check with your sys admin or just Google https://www.google.com.\r\n\r\nMAC/Windows users using http://boot2docker.io/ should be fine. Read the docs or just Google https://www.google.com.\r\n\r\n**Create a docker group**\r\n\r\n```bash\r\nsudo addgroup docker\r\n```\r\n\r\n**Add user to docker group**  \r\n\r\nHere user is ``ec2-user``\r\n\r\n```bash\r\nsudo usermod -aG docker ec2-user\r\n```\r\n\r\nLog out and log back in.\r\n\r\nThis ensures your user is running with the correct permissions.\r\n\r\nVerify your work by running ``docker`` without ``sudo``.\r\n\r\n```bash\r\ndocker run hello-world\r\n```\r\n\r\n..this is what you should get...\r\n\r\n```\r\nUnable to find image 'hello-world:latest' locally\r\nPulling repository hello-world\r\n91c95931e552: Download complete\r\na8219747be10: Download complete\r\nStatus: Downloaded newer image for hello-world:latest\r\nHello from Docker.\r\nThis message shows that your installation appears to be working correctly.\r\n\r\nTo generate this message, Docker took the following steps:\r\n 1. The Docker client contacted the Docker daemon.\r\n 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.\r\n    (Assuming it was not already locally available.)\r\n 3. The Docker daemon created a new container from that image which runs the\r\n    executable that produces the output you are currently reading.\r\n 4. The Docker daemon streamed that output to the Docker client, which sent it\r\n    to your terminal.\r\n\r\nTo try something more ambitious, you can run an Ubuntu container with:\r\n $ docker run -it ubuntu bash\r\n\r\nFor more examples and ideas, visit:\r\n http://docs.docker.com/userguide/\r\n```\r\n\r\n## Docker Security...\r\n\r\nThis post reviews the various security implications of using Docker to run applications within containers, and how to address them:\r\n[How Secure are Containers?](https://blog.docker.com/2013/08/containers-docker-how-secure-are-they/#more-697)\r\n\r\n> Docker containers are, by default, quite secure; especially if you take care of running your processes inside the containers as non-privileged users (i.e. non root).\r\n\r\n## Get NGSeasy\r\n\r\n```bash\r\n\r\n#############################################\r\n## Get NGSeasy                             ##\r\n#############################################\r\n\r\ncd /home/${USER}\r\n\r\ngit clone https://github.com/KHP-Informatics/ngseasy.git\r\n```\r\n\r\n## Install NGSeasy\r\n\r\n- Default install directory is `/home/${USER}`\r\n- in this example user home is `/home/ec2-user`\r\n- `make INTSALLDIR=\"/home/ec2-user\" all` \r\n   - sets up top level directory structure\r\n   - gets all docker images\r\n   - gets indexed hg19 and b37 genomes\r\n   - gets GATK recources for hg19 and b37 genomes\r\n   - gets whole genome and exome test data\r\n- Always set your **`INTSALLDIR`** : If you run `sudo make all` the install path will be `/home/root`. Please dont do this!\r\n- `sudo make install` installs scripts to `/usr/local/bin/`  \r\n\r\n```bash\r\n#############################################\r\n## install NGSeasy                         ##\r\n#############################################\r\n\r\ncd ngseasy\r\n\r\n## 1.\r\nmake INTSALLDIR=\"/home/ec2-user\" all\r\n\r\n## 2. \r\nsudo make install\r\n```\r\n\r\nInstallation can take a while, 1-2 hours, so go get a coffee../just chill...if your network is bad...then who knows how long...still..just chill...or go get fast internet!\r\n\r\n## NGSeasy Security\r\n**All NGSeasy applications are run as the non-root user `pipeman` within each container**\r\n\r\n## Recommended Network Speed\r\n\r\n**> 500 Mbit/s** : anything less will add a lot of time to set up (days - weeks).\r\n\r\n**Testing Internet Connection Speed**\r\n\r\nsource : http://askubuntu.com/questions/104755/how-to-check-internet-speed-via-terminal\r\n\r\n```bash\r\nwget -O speedtest-cli https://raw.github.com/sivel/speedtest-cli/master/speedtest_cli.py\r\nchmod +x speedtest-cli\r\n./speedtest-cli\r\n```\r\n\r\n```\r\nRetrieving speedtest.net configuration...\r\nRetrieving speedtest.net server list...\r\nTesting from Comcast Cable (x.x.x.x)...\r\nSelecting best server based on ping...\r\nHosted by FiberCloud, Inc (Seattle, WA) [12.03 km]: 44.028 ms\r\nTesting download speed........................................\r\nDownload: 32.29 Mbit/s\r\nTesting upload speed..................................................\r\nUpload: 5.18 Mbit/s\r\n```\r\n\r\n## Install time on Amazon EC2\r\n\r\nConnection Speed: ~ 800 Mbit/s \r\n\r\n```\r\nreal    94m54.237s\r\nuser    12m26.960s\r\nsys     28m46.648s\r\n```\r\n\r\nNote: We have only tested NGSeasy installation on Amazon EC2, Openstack and UK University Networks. These are all fairly fast networks with speeds exceeding 800 Mbit/s on average. \r\n\r\n## Running NGSeasy for the first time on the test data\r\n\r\n**Important!** NGSeasy is controlled from a single `config` file. See [ngseasy_test.config.tsv](https://github.com/KHP-Informatics/ngseasy/blob/master/test/ngseasy_test.config.tsv) for a basic template. It is important that the user sets this up properly before running NGSeasy.\r\n\r\n```bash\r\n#############################################\r\n## 0. Move to config file dir\r\n\r\ncd /home/ec2-user/ngs_projects/config_files/\r\n\r\n#############################################\r\n## 1. Run basic test\r\n\r\nngseasy -c ngseasy_test.config.tsv -d /home/ec2-user/ngs_projects\r\n```\r\n\r\n### What should happen...\r\n\r\nThis runs the following basic pipeline on Whole Exome PE 30x Illumina data, aligning to b37 (in theory...give it a try).  \r\n\r\n- FastQC > Trimmomatic > BWA > Platypus\r\n\r\n### Some notes and pointers\r\n\r\n- Edit **NCPU** in  **[ngseasy_test.config.tsv]** to suit your system  \r\n- Edit **PROJECT\\_DIR** in  **[ngseasy_test.config.tsv]** to suit your install path\r\n- We expect the user to palce all raw fastq files in ``raw_fastq``. NGSeasy uses this\r\nas a stagging area for new project and sample data.  \r\n- right now, always run ``ngseasy`` from the location/directory that contains the config.file  \r\n- each component of ngseasy can be run as a standalone script  \r\n\r\n****************\r\n\r\n\r\nNGSeasy (Easy Analysis of Next Generation Sequencing)\r\n=======================================================\r\nWe present **NGSeasy (Easy Analysis of Next Generation Sequencing)**, a flexible and easy-to-use NGS pipeline for automated alignment, quality control, variant calling and annotation. The pipeline allows users with minimal computational/bioinformatic skills to set up and run an NGS analysis on their own samples, in less than an afternoon, on any operating system (Windows, iOS or Linux) or infrastructure (workstation, cluster or cloud).\r\n\r\nNGS pipelines typically utilize a large and varied range of software components and incur a substantial configuration burden during deployment which limits their portability to different computational environments. NGSeasy simplifies this by providing the pipeline components encapsulated in Docker™ containers and bundles in a wide choice of tools for each module. Each module of the pipeline represents one functional grouping of tools (e.g. sequence alignment, variant calling etc.).\r\n\r\nDeploying the pipeline is as simple as pulling the container images from the public repository into any host running Docker. NGSeasy can be deployed on any medium to high-end workstation, high performance computer cluster and compute clouds (public/private cloud computing) - enabling instant access to elastic scalability without investment overheads for additional compute hardware and makes open and reproducible research straight forward for the greater scientific community.\r\n\r\n### Advantages ###\r\n- Easy to use for non-informaticians.  \r\n- All run from a single config file that can be made in Excel.  \r\n- User can select from mutiple aligners, variant callers and variant annotators\r\n- No scary python, .yaml or .json files...just one simple Excel workbook saved as a textfile.  \r\n- Just follow our simple set of instructions and NGS away!  \r\n- Choice of aligners and variant callers and anntators  \r\n- Allows reproducible research  \r\n- Version controlled for auditing  \r\n- Customisable  \r\n- Easy to add new tools  \r\n- If it's broke...we will fix it..\r\n- Enforced naming convention and directory structures  \r\n- Allows users to run \"Bake Offs\" between tools with ease  \r\n\r\nWe have adapted the current best practices from the Genome Analysis Toolkit (GATK, http://www.broadinstitute.org/gatk/guide/best-practices)  for processing raw alignments in SAM/BAM format and variant calling. The current workflow, has been optimised for Illumina platforms, but can easily be adapted for other sequencing platforms, with minimal effort.  \r\n\r\nAs the containers themselves can be run as executables with pre-specified cpu and RAM resources, the orchestration of the pipeline can be placed under the control of conventional load balancers if this mode is required.  \r\n\r\n\r\n****************\r\n\r\nOverview of the NGSeasy Pipeline Components\r\n=============================================\r\nThe basic pipeline contains all the basic tools needed for manipulation and\r\nquality control of raw fastq files (ILLUMINA focused), SAM/BAM manipulation,\r\nalignment, cleaning (based on GATK best practises [http://www.broadinstitute.org/gatk/guide/best-practices]) and first pass\r\nvariant discovery. Separate containers are provided for indepth variant annotation,\r\nstructural variant calling, basic reporting and visualisations.  \r\n\r\n![ngsEASY](https://github.com/KHP-Informatics/ngs/blob/dev2/figs/ngsEASY_component_visualisation.png)\r\n\r\n## A Special note on the NGSeasy base image.\r\n\r\nWe include the following - what we think of as - **_NGS Powertools_** in the **[compbio/ngseasy-base]()** image.\r\nThese are all tools that allow the user to slice and dice BED/SAM/BAM/VCF files in multiple ways.\r\n\r\n 1.  samtools  \r\n 2.  bcftools  \r\n 3.  vcftools  \r\n 4.  vcflib  \r\n 5.  bamUtil  \r\n 6.  bedtools2  \r\n 7.  ogap  \r\n 8.  samblaster  \r\n 9.  sambamba  \r\n 10. bamleftalign  \r\n 11. seqtk  \r\n 12. parallel  \r\n\r\nThis image is used as the base of all our compbio/ngseasy-* tools.\r\n\r\n**Why not a separate containers per application?** The more docker-esque approach, would be to have separate containers for each NGS tool. However, this belies the fact that many of these tools interact in a deep way. Therefore, we built  these into a single development environment for ngseasy, to allow pipes and streamlined system calls for manipulating the output of NGS pipelines (BED/SAM/BAM/VCF files).\r\n\r\n****************\r\n\r\nThe Full NGSeasy pipeline\r\n=============================\r\n\r\nThe NGSeasy pipelines implement the following :-\r\n\r\n- **Quality control of raw fastq** files using **[FASTQC](http://www.bioinformatics.babraham.ac.uk/projects/fastqc/)**  \r\n\r\n- **Read trimming** using **[TRIMMOMATIC](http://www.usadellab.org/cms/?page=trimmomatic)**.\r\n\r\n- **Alignment** using one of\r\n    - **[BWA](http://bio-bwa.sourceforge.net/)**  \r\n    - **[STAMPY](http://www.well.ox.ac.uk/project-stampy)**\r\n    - **[NOVOALIGN](http://www.novocraft.com)**  \r\n    - **[BOWTIE2](http://bowtie-bio.sourceforge.net/bowtie2/index.shtml)**  \r\n    - **[SNAP](http://snap.cs.berkeley.edu/)**  \r\n\r\n- **SAM/BAM sorting and indexing** with **[SAMBAMBA](https://github.com/lomereiter/sambamba)**.  \r\n\r\n- **Read Group information added** using **[PICARDTOOLS](http://broadinstitute.github.io/picard/):[AddOrReplaceReadGroups](http://broadinstitute.github.io/picard/command-line-overview.html#AddOrReplaceReadGroups)**\r\n\r\n- **Duplicate marking** with **[SAMBLASTER](https://github.com/GregoryFaust/samblaster)**.  \r\n\r\n>For academic users and/or commercial/clinical groups whom have paid for GATK licensing, the next steps are to perform\r\n\r\n- **Indel indel realignment and base quality score recalibration** using **[GATK](https://www.broadinstitute.org/gatk/)** built in tools :\r\n    - **[GATK:RealignerTargetCreator](https://www.broadinstitute.org/gatk/gatkdocs/org_broadinstitute_gatk_tools_walkers_indels_RealignerTargetCreator.php)**\r\n    - **[GATK:IndelRealigner](https://www.broadinstitute.org/gatk/gatkdocs/org_broadinstitute_gatk_tools_walkers_indels_IndelRealigner.php)**\r\n    - **[GATK:BaseRecalibrator](https://www.broadinstitute.org/gatk/gatkdocs/org_broadinstitute_gatk_tools_walkers_bqsr_BaseRecalibrator.php)**\r\n\r\n> For the non-GATK version\r\n\r\n- **Base quality score recalibration** using [BamUtil](http://genome.sph.umich.edu/wiki/BamUtil)  \r\n    - **[BamUtil:recab](http://genome.sph.umich.edu/wiki/BamUtil:_recab)**\r\n\r\n- **Post alignment quality control and reporting** is performed usng a number of tools and custom scripts:\r\n    - **[SAMTOOLS:flagstats](https://github.com/samtools/samtools)**\r\n    - **[BEDTOOLS:genomecov](https://github.com/arq5x/bedtools2)**\r\n    - **[BEDTOOLS:bamtobed](https://github.com/arq5x/bedtools2)**\r\n    - **[PICARDTOOLS:CollectMultipleMetrics](http://broadinstitute.github.io/picard/command-line-overview.html#CollectMultipleMetrics)**\r\n    - **[PICARDTOOLS:CollectAlignmentSummaryMetrics](http://broadinstitute.github.io/picard/command-line-overview.html#CollectAlignmentSummaryMetrics)**\r\n    - **[PICARDTOOLS:CollectWgsMetrics](http://broadinstitute.github.io/picard/command-line-overview.html#CollectWgsMetrics)**\r\n    - **[PICARDTOOLS:CollectTargetedPcrMetrics](http://broadinstitute.github.io/picard/command-line-overview.html#CollectTargetedPcrMetrics)** (coming soon)\r\n\r\n- **SNP and small INDEL** calling using one of the following or a combibation of these tools, if the `ensemble` method is called using **[bcbio.variation variant-ensemble](https://github.com/chapmanb/bcbio.variation)**\r\n    - **[FREEBAYES](https://github.com/ekg/freebayes)**\r\n    - **[PLATYPUS](http://www.well.ox.ac.uk/platypus)**\r\n    - **[GATK:UnifiedGenotyper](https://www.broadinstitute.org/gatk/guide/tooldocs/org_broadinstitute_gatk_tools_walkers_genotyper_UnifiedGenotyper.php)**\r\n    - **[GATK:HaplotypeCaller](https://www.broadinstitute.org/gatk/gatkdocs/org_broadinstitute_gatk_tools_walkers_haplotypecaller_HaplotypeCaller.php)**\r\n\r\n- **Structural Variant (CNV)** calling using one of the following or or a combibation of if the `ensemble` methods are called:-\r\n    - **[DELLY](https://github.com/tobiasrausch/delly) : in Dev**\r\n    - **[LUMPY](https://github.com/arq5x/lumpy-sv/): in Dev**\r\n    - **[cn.MOPS](http://www.bioinf.jku.at/software/cnmops/): in Dev**\r\n    - **[m-HMM](https://www.stt.msu.edu/users/hengwang/mHMM.html): in Dev**\r\n    - **[ExomeDepth](http://cran.r-project.org/web/packages/ExomeDepth/index.html): in Dev**\r\n    - **[SLOPE](http://www-genepi.med.utah.edu/suppl/SLOPE/index.html): in Dev and not tested**  \r\n    - **[cnvnator](http://sv.gersteinlab.org/): in Dev**  \r\n\r\n- **Variant annotation** using using one of the following or a combibation of if the `ensemble` methods are called.\r\n    - **[SnpEff](http://snpeff.sourceforge.net/): in Dev**\r\n    - **[ANNOVAR](http://www.openbioinformatics.org/annovar/): in Dev**\r\n    - **[VEP](http://www.ensembl.org/info/docs/tools/vep/index.html): in Dev**\r\n\r\n- **Variant reporting** using custom scripts\r\n\r\n**Note** Some of the later functions i.e. variant annotation and qc reporting are still in dev.  \r\n\r\n**We highly recommed read trimming prior to alignment.**\r\nWe have noticed considerable speed-ups in alignmnet time and increased quality of SNP/INDEL calls using trimmed vs raw fastq.  \r\n\r\n**Base quality score recalibration is also recommended.**  \r\nAs an alternative to GATK, we have added fucntionality for use of\r\n**[BamUtil](https://github.com/statgen/bamUtil):[recab](http://genome.sph.umich.edu/wiki/BamUtil:_recab)**\r\nfor base quality score recalibration.\r\n\r\n**Non-GATK users**\r\n- are encouraged to use aligners such as **[stampy](http://www.well.ox.ac.uk/project-stampy)** and **[novoalign](http://www.novocraft.com)** that perform base quality score recal on the fly.  \r\n- are encouraged to use variant callers that perform local re-aligmnet around candidate sites to mitigate the need for the indel realignment stages.  \r\n    - **[freebayes](https://github.com/ekg/freebayes)**\r\n    - **[platypus](http://www.well.ox.ac.uk/platypus)**\r\n\r\n**************\r\n\r\n## Dockerised NGS Tools\r\n\r\nAll NGSeasy Docker images can be pulled down from **[compbio Docker Hub](https://hub.docker.com/u/compbio/)** or using the Makefile.  \r\nWe provide an Amazon EBS data volume with indexed genomes: XXXXXX  \r\n\r\n\r\n## Table 1. NGSeasy Tools\r\n\r\n| Docker Image | Version | NGS Tool (version) | Short Description | URL |\r\n|--------------|---------|--------------------|-------------------|-----|\r\n| compbio/ngseasy-base | 1.0-r001 | VCFtools (v0.1.12b) | manipulate vcf | [link](http://vcftools.sourceforge.net/) |\r\n| - | - | vt (latest) |  manipulate vcf | [link](http://genome.sph.umich.edu/wiki/Vt) |\r\n| - | - | bcftools (1.2-5-g7fa0d25) |  manipulate vcf | [link](https://github.com/samtools/bcftools) |\r\n| - | - | vcflib (v1.0.0) |  manipulate vcf | [link](https://github.com/ekg/vcflib) |\r\n| - | - | samtools (1.2-17-ge91985a) |  manipulate sam/bam | [link](https://github.com/samtools/) |\r\n| - | - | samblaster (0.1.21) |  manipulate sam/bam | [link](https://github.com/GregoryFaust/samblaster) |\r\n| - | - | sambamba (v0.5.1)|  manipulate sam/bam | [link](https://github.com/lomereiter/sambamba) |\r\n| - | - | bamUtil (1.0.13)|  manipulate sam/bam | [link](https://github.com/statgen/bamUtil) |\r\n| - | - | bedtools (v2.23.0-10-g447cb97)|  manipulate bed files| [link](https://github.com/arq5x/bedtools2) |\r\n| - | - | seqtk (1.0-r77-dirty)|  manipulate fastq| [link](https://github.com/lh3/seqtk) |\r\n| - | - | vawk (0.0.2)|  manipulate vcf| [link](https://github.com/cc2qe/vawk) |\r\n| - | - | bioawk (latest)|  manipulate sam/bam/vcf | [link](https://github.com/lh3/bioawk) |\r\n| compbio/ngseasy-fastqc | 1.0-r001 | fastqc (v0.11.2) | FASTQ Quality Control Plots| [link](http://www.bioinformatics.babraham.ac.uk/projects/fastqc/) |\r\n| compbio/ngseasy-trimmomatic | 1.0-r001 | trimmomatic (0.32) | FASTQ Quality Trimming | [link](http://www.usadellab.org/cms/index.php?page=trimmomatic) |\r\n| compbio/ngseasy-bwa | 1.0-r001 | bwa ( 0.7.12-r1039) | Aligner | [link](http://bio-bwa.sourceforge.net/) |\r\n| compbio/ngseasy-stampy | 1.0-r001 | stampy (stampy-1.0.27) | Aligner | [link](http://www.well.ox.ac.uk/project-stampy) |\r\n| compbio/ngseasy-snap | 1.0-r001 | snap-aligner (1.0beta.18) | Aligner | [link](http://snap.cs.berkeley.edu/) |\r\n| compbio/ngseasy-bowtie2 | 1.0-r001 | bowtie2 (2.2.4) | Aligner | [link](http://bowtie-bio.sourceforge.net/bowtie2/index.shtml) |\r\n| compbio/ngseasy-novoalign | 1.0-r001 | novoalign (3.02.13) | Aligner | [link](http://www.novocraft.com/products/novoalign/) |\r\n| compbio/ngseasy-gatk | 1.0-r001 | gatk (3.4-0) | NGS PowerTools | [link](https://www.broadinstitute.org/gatk/) |\r\n| compbio/ngseasy-picardtools | 1.0-r001 | picardtools (1.128) | NGS PowerTools | [link](http://broadinstitute.github.io/picard/) |\r\n| compbio/ngseasy-glia | 1.0-r001| glia (latest) | NGS local realignment | [link](https://github.com/ekg/glia) |\r\n| compbio/ngseasy-platypus | 1.0-r001 | platypus (0.8.1) | Variant Caller | [link](https://github.com/andyrimmer/Platypus) |\r\n| compbio/ngseasy-freebayes | 1.0-r001 | freebayes (v0.9.21-19-gc003c1e) | Variant Caller | [link](https://github.com/ekg/freebayes) |\r\n\r\n## Running an NGSeasy Tool Interactively\r\n\r\nRun as non-root user `pipeman`.\r\n\r\n`-v /media/Data:/home/pipeman` : Mounts local directory `/media/Data` to container directory `/home/pipeman`\r\n\r\n```bash\r\nTOOL=\"bwa\"\r\n\r\ndocker run \\\r\n-P \\\r\n-w /home/pipeman \\\r\n-e HOME=/home/pipeman \\\r\n-e USER=pipeman \\\r\n--user pipeman \\\r\n-v /media/Data:/home/pipeman \\\r\n-it compbio/ngseasy-${TOOL}:1.0 /bin/bash\r\n```\r\n\r\n************\r\n\r\nDockerised NGSeasy\r\n==========================\r\n\r\n![docker](https://github.com/KHP-Informatics/ngs/blob/master/figs/Docker_container_engine_logo.png)  \r\n\r\nThe following section describes getting the Dockerised NGSeasy Pipeline(s) and Resources, project set up and running NGSeasy.\r\n\r\nGetting all resources and building required tools will take a few hours depending on network connections and any random \"ghosts in the machine\" - half a day in reality.\r\nBut once you're set up, thats it - you are good to go.\r\n\r\n## System Requirements\r\n\r\nSee Table [**System Requirements**]() for our recommended system requirements.NGSeasy will run on any modern computer/workstation or cloud infrastructure.  The Hard Disk requirements are based on our experience and result from the fact that the pipeline/tools produce a range of intermediary and temporary files for each sample.\r\n\r\nThe full NGSeasy install includes indexed genomes for hg19 and b37 for all aligners, annotation files from GATK resource, and all of the NGSeasy docker images. Additional disk space is needed if the user wishes to install the databases associated with the variant annotators, Annovar, VEP and snpEff.\r\n\r\nBased on our experience, a functional basic NGS compute system for a small lab, would consist of at least 4TB disk space, 60GB RAM and at least 32 CPU cores. Internet speed and network connectivity are a major bottle neck when dealing with NGS sized data, and groups are encouraged to think about these issues before embarking on multi sample or population level studies - where compute requirements can very quickly escalate.  \r\n\r\n**System Requirements**\r\n\r\nComponent | Minimum | Recommended\r\n|----|----|----|\r\nRAM | 16GB | 48-60GB\r\nCPU |  8 cores | 16-36 cores\r\nHard Disk (per sample) | 50-100GB | 200-500GB\r\nNGSeasy Install | 200GB | 500GB\r\nAnnotation Databases | 500GB | >1TB\r\n\r\n\r\n## Installing Docker\r\n\r\nFollow the simple instructions in the links provided below  \r\n\r\n- [Mac](https://docs.docker.com/installation/mac/)  \r\n- [Windows](https://docs.docker.com/installation/windows/)\r\n- [Ubuntu](https://docs.docker.com/installation/ubuntulinux/)\r\n\r\nA full set of instructions for multiple operating systems are available on the [Docker website](https://docs.docker.com/installation/).\r\n\r\n## Getting NGSeasy\r\n\r\nWe provide a simple **Makefile** to pull all of the public nsgeasy components, scripts and set up to correct project directory structre on your local machines.\r\n\r\nSetting up the initial project can take up a day, depending on your local network connections and speeds.\r\n\r\nThe default install dir is the users **${HOME}** directory.\r\nThe  **Makefile** provides options to install to any user defined directory and select NGSeasy version. eg :-\r\n\r\n```bash\r\n## EG. Installing to /media/scratch\r\nmake INSTALLDIR=\"/media/scratch\" VERSION=\"1.0\" all\r\n```\r\n\r\nThe  **Makefile** also allows installation of selected components (check out its insides!).\r\n\r\n\r\n## Set up NGSeasy Project configuration file\r\n\r\nUsing Excel or something, make a **[config.file.tsv]**  file and save as [TAB] a Delimited file with ``.tsv`` extenstion.\r\nThis sets up Information related to: Project Name, Sample Name, Library Type, Pipeline to call, NCPU.\r\n\r\nWe provide a template that can be used with NGSeasy, see [ngseasy_test.config.tsv](https://docs.google.com/spreadsheets/d/13DosazuGdeAojZQ6YySM420p76RGleCYjR7a_MvcP2U/edit?usp=sharing).\r\n\r\nThe **[config.file.tsv]** should contain the following 23 columns for each sample to be run through a pipeline:-\r\n\r\n|Variable|type|Description|Options(Examples)|\r\n|--------|--------|--------|--------|\r\nPROJECT_ID|STRING|Project ID| Cancer\r\nSAMPLE_ID|STRING|Sample ID| SAMPLE_I\r\nFASTQ1|STRING|Read 1 Fastq| foo_R1.fq.gz\r\nFASTQ2|STRING|Read 2 Fastq| foo_R2.fq.gz\r\nPROJECT_DIR|STRING|ngseasy project dir| /media/scratch/ngs_projects\r\nDNA_PREP_LIBRARY_ID|STRING|NGS Library|\r\nNGS_PLATFORM|STRING|NGS Platform|ILLUMINA\r\nNGS_TYPE|STRING|NGS Type|WEX (exome), WGS (genome), TGS (targeted)\r\nBAIT|STRING|bait bed file| FOO.bed\r\nCAPTURE|STRING|Capture bed file| BAR.bed\r\nGENOMEBUILD|STRING|genome verison|hg19, b37 , b38 (coming soon)\r\nFASTQC|STRING|Select fastqc|no-fastqc, qc-fastqc\r\nTRIM|STRING|Select trimming|no-trimm, atrimm, btrimm\r\nBSQR|STRING|Select BSQR| no-bsqr, bam-bsqr, gatk-bsqr\r\nREALN|STRING|Select Realignment| no-realn, bam-realn, gatk-realn\r\nALIGNER|STRING|Select Aligner|no-aln, bwa, stampy, snap, novoalign, bowtie2\r\nVARCALLER|STRING|Select Variant Caller|no-varcall, freebayes, platypus, UnifiedGenotyper, HaplotypeCaller, ensemble\r\nCNV|STRING|Select CNV caller|no-sv,all-sv,lumpy,delly,slope,exomedepth,mhmm,cnvnator\r\nANNOTATOR|STRING|Select variant annotator|no-anno,snpeff,annovar,vep\r\nCLEANUP|STRING|clean up temp files|TRUE, FALSE\r\nNCPU|NUMBER|number of cores|1 .. N\r\nVERSION|NUMBER|NGSeasy version|1.0\r\nNGSUSER|STRING|user email|stephen.j.newhouse@gmail.com\r\n\r\n## The NGSeasy project directory\r\nThe user needs to make the relevent directory structures on their local machine before starting an NGS run.\r\n\r\nOn our sysetm we typically set up a top-level driectory called **ngs_projects** within which we store output from all our individual NGS projects.\r\n\r\nHere we are working from local top level directory called **media/**, but this can really be any folder on your local system ie your home directory **~/${USER}**.  \r\n\r\nWithin this directory **media** we make the following folders: -\r\n\r\n```bash\r\nngs_projects  \r\n|  \r\n|__raw_fastq  \r\n|__config_files  \r\n|__ngseasy_resources  \r\n   |  \r\n   |__reference_genomes_b37  \r\n   |__reference_genomes_hg19\r\n```\r\n\r\nRunning the script `make XXXX` ensures that all relevant directories are set up, and also enforces a clean structure to the NGS project.  \r\n\r\nWithin this we make a `raw_fastq` folder, where we temporarily store all the raw fastq files for each project. This folder acts as an initial stagging area for the raw fastq files. During the project set up, we copy/move project/sample related fastq files to their own specific directories.\r\nFastq files must have suffix and be gzipped: **\\_1.fq.gz** or **\\_2.fq.gz**  \r\nfurture version will allow any format  \r\n\r\nRunning `ngseasy` with the relevent configuration file, will set up the following directory structure for every project and sample within a project:-  \r\n\r\n```bash\r\n.\r\nngs_projects  \r\n|  \r\n|__raw_fastq  \r\n|__config_files  \r\n|__run_logs\r\n|__ngseasy_resources \r\n|\r\n|__ project_id  \r\n\t|  \r\n\t|__run_logs  \r\n\t|__config_files  \r\n\t|\r\n\t|__sample_id_1  \r\n\t|\t|  \r\n\t|\t|__fastq  \r\n\t|\t|__tmp  \r\n\t|\t|__alignments  \r\n\t|\t|__vcf  \r\n\t|\t|__reports  \r\n\t|\t|__config_files  \r\n\t|\r\n\t|\r\n\t|__sample_id_n  \r\n\t\t|  \r\n\t\t|__fastq  \r\n\t\t|__tmp  \r\n\t\t|__alignments  \r\n\t\t|__vcf  \r\n\t\t|__reports  \r\n\t\t|__config_files  \r\n```\r\n\r\n## The raw_fastq Directory\r\n\r\nThe ``raw_fastq`` Directory is a very special directory indeed.\r\nThis is where the user should copy and or move **ALL NEW RAW FASTQ** Files to.\r\nThis is to be used as an intial staging area for all fastq files.\r\nNGSeasy expects all raw fastq data to be placed here for all new samples or runs.\r\nNGSeasy inspects this folder and looks for the fastq file names specified in your confifg file.\r\nIf NGSeasy doen't find them, then it exits.\r\nWe do this to force the user to get organised.\r\n\r\n****************\r\n\r\n## Manually Build required NGSeasy Container Images\r\n\r\n**Work In Progress...**\r\n\r\nCurrently we are not able to automatically build some of the tools in pre-built docker containers due to licensing restrictions.\r\n\r\nSome of the software has restrictions on use particularly for commercial\r\npurposes. Therefore if you wish to use this for commercial purposes, then you\r\nleagally have to approach the owners of the various components yourself!  \r\n\r\n**Software composing the pipeline requiring registration:-**  \r\n\r\n   * novoalign http://www.novocraft.com/  \r\n   * GATK https://www.broadinstitute.org/gatk/  \r\n   * ANNOVAR http://www.openbioinformatics.org/annovar/  \r\n\r\n**These tools require manual download and registration with the proivder. For non-academics/commercial groups, you will need to pay for some of these tools.**\r\n\r\nOnce you have paid/registered and downloaded the tool, we provide scripts and guidance for building these tools on your system.  \r\n\r\nIts as easy as:-  \r\n\r\n```bash\r\ndocker build -t compbio/ngseasy-${TOOL} .\r\n```\r\n\r\n\r\n## Building NOVOALIGN\r\n\r\n**Download Novoalign from  http://www.novocraft.com/** into the local build directory **ngseasy/containerized/ngs_docker_debian/ngs_aligners/ngseasy_novoalign*.\r\nEdit the [Dockerfile](https://github.com/KHP-Informatics/ngseasy/blob/master/containerized/ngs_docker_debian/ngs_aligners/ngseasy_novoalign/Dockerfile)\r\nto relfect the correct version of novoalign.  \r\n\r\nTo use all novoalign fucntionality, you will need to **pay for a license**.\r\n\r\nOnce you obtained your **novoalign.lic**, download this to the build directory **ngseasy/containerized/ngs_docker_debian/ngs_aligners/ngseasy_novoalign*, which now should contain your updated [Dockerfile](https://github.com/KHP-Informatics/ngseasy/blob/master/containerized/ngs_docker_debian/ngs_aligners/ngseasy_novoalign/Dockerfile).\r\n\r\n```bash\r\n# move to ngseasy_stampy folder\r\ncd ngseasy/containerized/ngs_docker_debian/ngs_aligners/ngseasy_novoalign\r\nls\r\n```\r\n\r\n**the directory should contain the following:-**\r\n\r\n```\r\nDockerfile\r\nnovoalign.lic\r\nREADME.md\r\nnovosortV1.03.01.Linux3.0.tar.gz\r\nnovocraftV3.02.08.Linux3.0.tar.gz\r\n```\r\n\r\n**build novoalign**\r\n\r\n```bash\r\n# build\r\ndocker build -t compbio/ngseasy-novoalign:v1.0 .\r\n```\r\n\r\n******\r\n\r\n## Building GATK\r\n\r\nYou need to register and accept the GATK license agreement at https://www.broadinstitute.org/gatk/.  \r\n\r\nOnce done, download GATK and place in the GTAK build directory **ngseasy/containerized/ngs_docker_debian/ngs_utils/ngseasy_gatk**.  \r\n\r\nEdit the [Dockerfile](https://github.com/KHP-Informatics/ngseasy/blob/master/containerized/ngs_docker_debian/ngs_utils/ngseasy_gatk/Dockerfile) to relfect\r\nthe correct version of GATK.  \r\n\r\n```bash\r\n# move to ngseasy_gatk folder\r\ncd ngseasy/containerized/ngs_docker_debian/ngs_utils/ngseasy_gatk\r\nls\r\n```\r\n\r\n**the directory should contain the following:-**\r\n\r\n```\r\nDockerfile\r\nREADME.md\r\nGenomeAnalysisTK-3.3-0.tar.bz2\r\n```\r\n\r\n**build gatk**\r\n\r\n```bash\r\n# build\r\ndocker build -t compbio/ngseasy-gatk:v1.0 .\r\n```\r\n\r\n********\r\n\r\n## Manually Build NGSeasy Variant Annotaion Container Images\r\n\r\nThe tools used for variant annotation use large databases and the docker images exceed 10GB. Therefore, the user should manually build these container images prior to running the NGS pipelines.\r\nDocker build files ([Dockerfile](https://docs.docker.com/jsearch/?q=Dockerfile)) are available for\r\n- [Annovar](https://github.com/KHP-Informatics/ngs/tree/master/containerized/ngs_docker_debian/ngseasy_annovar/Dockerfile)  \r\n- [VEP](https://github.com/KHP-Informatics/ngs/tree/master/containerized/ngs_docker_debian/ngseasy_vep/Dockerfile)\r\n- [snpEff](https://github.com/KHP-Informatics/ngs/tree/master/containerized/ngs_docker_debian/ngseasy_snpeff/Dockerfile)  \r\n\r\n**Note** Annovar requires user registration.  \r\n\r\n**Once built on the user system, these container images can persist for as long as the user wants.**  \r\n\r\n**Large Variant Annotation Container Images**\r\n\r\nIts as easy as:-  \r\n\r\n```bash\r\ndocker build -t compbio/ngseasy-${TOOL} .\r\n```\r\n********\r\n## Build VEP\r\n```bash\r\n\r\ncd /media/ngs_projects/nsgeasy/ngs/containerized/ngs_docker_debian/ngseasy_vep\r\n\r\nsudo docker build -t compbio/ngseasy-vep:${VERSION} .\r\n```\r\n********\r\n## Build Annovar\r\n\r\n```bash\r\ncd /media/ngs_projects/nsgeasy/ngs/containerized/ngs_docker_debian/ngseasy_annovar\r\n\r\nsudo docker build -t compbio/ngseasy-annovar:${VERSION} .\r\n```\r\n********\r\n## Build snpEff\r\n```bash\r\ncd /media/ngs_projects/nsgeasy/ngs/containerized/ngs_docker_debian/ngseasy_snpeff\r\n\r\nsudo docker build -t compbio/ngseasy-snpeff:${VERSION} .\r\n```\r\n\r\n********\r\n## Coming Soon\r\n- New Aligners:- [SNAP](http://snap.cs.berkeley.edu/), GSNAP, mr- and mrs-Fast,gem\r\n- https://github.com/amplab/snap\r\n- [SLOPE (CNV fo targetted NSG)] ((http://www.biomedcentral.com/1471-2164/12/184))\r\n- Cancer Pipelines\r\n- Annotation Pipelines and Databases\r\n- Visualisation Pipelines\r\n- Var Callers:- VarScan2\r\n- SGE scripts and basic BASH scrips for running outside of Docker\r\n- biobambam https://github.com/gt1/biobambam  \r\n- bamaddrg https://github.com/ekg/bamaddrg  \r\n- bamtools https://github.com/ekg/bamtools  \r\n\r\n## Useful Links\r\n\r\n- https://bcbio.wordpress.com/  \r\n- https://basecallbio.wordpress.com/2013/04/23/base-quality-score-rebinning/  \r\n- https://github.com/statgen/bamUtil  \r\n- http://genome.sph.umich.edu/wiki/BamUtil:_recab  \r\n- https://github.com/chapmanb/bcbio.variation  \r\n- http://plagnol-lab.blogspot.co.uk/2013/11/faq-and-clarifications-for-exomedepth-r.html\r\n\r\n*************************\r\n(C) 2015 Stephen J Newhouse & Amos Folarin \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}